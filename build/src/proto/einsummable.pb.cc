// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: einsummable.proto

#include "einsummable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_einsummable_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Constant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EsInn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IECloseReaders;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IEInit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InnRegionDim;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Lowertri;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGAlloc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGDel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGEvict;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGInputMem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGInputSto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGLoad;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGMove;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MGPartialize;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemLoc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OutRegionDim;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Partdim;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TGInput;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TGMove;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TouchDim;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<10> scc_info_MemGraphNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Einsummable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IEExecute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IELoadDataMatrix;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IELoadFreqsCis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IELoadMask;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IELoadWeight;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IERandom;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MGConstant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemGraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Partition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Placement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Relation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TGApply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TGConstant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TGPartialInn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TGPartialize;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Touch;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Fill;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_IEBuildNext;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MGApply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TGPartialUnit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_TaskGraphNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_einsummable_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_InferenceEvent;
}  // namespace protobuf_einsummable_2eproto
namespace es_proto {
class EsInnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EsInn>
      _instance;
} _EsInn_default_instance_;
class EinsummableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Einsummable>
      _instance;
} _Einsummable_default_instance_;
class EinsummableListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EinsummableList>
      _instance;
} _EinsummableList_default_instance_;
class TouchDimDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TouchDim>
      _instance;
} _TouchDim_default_instance_;
class TouchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Touch>
      _instance;
} _Touch_default_instance_;
class ConstantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Constant>
      _instance;
} _Constant_default_instance_;
class LowertriDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lowertri>
      _instance;
} _Lowertri_default_instance_;
class FillDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Fill>
      _instance;
  const ::es_proto::Constant* constant_;
  const ::es_proto::Lowertri* lowertri_;
} _Fill_default_instance_;
class TGInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGInput>
      _instance;
} _TGInput_default_instance_;
class TGApplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGApply>
      _instance;
} _TGApply_default_instance_;
class TGMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGMove>
      _instance;
} _TGMove_default_instance_;
class TGConstantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGConstant>
      _instance;
} _TGConstant_default_instance_;
class InnRegionDimDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InnRegionDim>
      _instance;
} _InnRegionDim_default_instance_;
class OutRegionDimDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutRegionDim>
      _instance;
} _OutRegionDim_default_instance_;
class TGPartialInnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGPartialInn>
      _instance;
} _TGPartialInn_default_instance_;
class TGPartialUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGPartialUnit>
      _instance;
} _TGPartialUnit_default_instance_;
class TGPartializeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TGPartialize>
      _instance;
} _TGPartialize_default_instance_;
class TaskGraphNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskGraphNode>
      _instance;
  const ::es_proto::TGInput* input_;
  const ::es_proto::TGApply* apply_;
  const ::es_proto::TGMove* move_;
  const ::es_proto::TGConstant* constant_;
  const ::es_proto::TGPartialize* partialize_;
} _TaskGraphNode_default_instance_;
class TaskGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskGraph>
      _instance;
} _TaskGraph_default_instance_;
class PartdimDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Partdim>
      _instance;
} _Partdim_default_instance_;
class PartitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Partition>
      _instance;
} _Partition_default_instance_;
class PlacementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Placement>
      _instance;
} _Placement_default_instance_;
class RelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Relation>
      _instance;
} _Relation_default_instance_;
class RemapRelationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemapRelations>
      _instance;
} _RemapRelations_default_instance_;
class MGInputMemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGInputMem>
      _instance;
} _MGInputMem_default_instance_;
class MGInputStoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGInputSto>
      _instance;
} _MGInputSto_default_instance_;
class MGConstantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGConstant>
      _instance;
} _MGConstant_default_instance_;
class MGApplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGApply>
      _instance;
  const ::es_proto::Einsummable* einsummable_;
  const ::es_proto::Touch* touch_;
} _MGApply_default_instance_;
class MGMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGMove>
      _instance;
} _MGMove_default_instance_;
class MGEvictDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGEvict>
      _instance;
} _MGEvict_default_instance_;
class MGLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGLoad>
      _instance;
} _MGLoad_default_instance_;
class MGPartializeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGPartialize>
      _instance;
} _MGPartialize_default_instance_;
class MGAllocDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGAlloc>
      _instance;
} _MGAlloc_default_instance_;
class MGDelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MGDel>
      _instance;
} _MGDel_default_instance_;
class MemGraphNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemGraphNode>
      _instance;
  const ::es_proto::MGInputMem* inputmem_;
  const ::es_proto::MGInputSto* inputsto_;
  const ::es_proto::MGConstant* constant_;
  const ::es_proto::MGApply* apply_;
  const ::es_proto::MGMove* move_;
  const ::es_proto::MGEvict* evict_;
  const ::es_proto::MGLoad* load_;
  const ::es_proto::MGPartialize* partialize_;
  const ::es_proto::MGAlloc* alloc_;
  const ::es_proto::MGDel* del_;
} _MemGraphNode_default_instance_;
class MemGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemGraph>
      _instance;
} _MemGraph_default_instance_;
class MemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mem>
      _instance;
} _Mem_default_instance_;
class MemLocDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemLoc>
      _instance;
} _MemLoc_default_instance_;
class IEInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IEInit>
      _instance;
} _IEInit_default_instance_;
class IECloseReadersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IECloseReaders>
      _instance;
} _IECloseReaders_default_instance_;
class IELoadWeightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IELoadWeight>
      _instance;
} _IELoadWeight_default_instance_;
class IELoadDataMatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IELoadDataMatrix>
      _instance;
} _IELoadDataMatrix_default_instance_;
class IELoadMaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IELoadMask>
      _instance;
} _IELoadMask_default_instance_;
class IELoadFreqsCisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IELoadFreqsCis>
      _instance;
} _IELoadFreqsCis_default_instance_;
class IEExecuteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IEExecute>
      _instance;
} _IEExecute_default_instance_;
class IEBuildNextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IEBuildNext>
      _instance;
} _IEBuildNext_default_instance_;
class IERandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IERandom>
      _instance;
} _IERandom_default_instance_;
class InferenceEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceEvent>
      _instance;
  const ::es_proto::IEInit* init_;
  const ::es_proto::IECloseReaders* close_readers_;
  const ::es_proto::IELoadWeight* load_weight_;
  const ::es_proto::IELoadDataMatrix* load_data_matrix_;
  const ::es_proto::IELoadMask* load_mask_;
  const ::es_proto::IELoadFreqsCis* load_freqs_cis_;
  const ::es_proto::IEExecute* execute_;
  const ::es_proto::IEBuildNext* build_next_;
  const ::es_proto::IERandom* random_;
} _InferenceEvent_default_instance_;
class InferenceEventsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceEvents>
      _instance;
} _InferenceEvents_default_instance_;
}  // namespace es_proto
namespace protobuf_einsummable_2eproto {
static void InitDefaultsEsInn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_EsInn_default_instance_;
    new (ptr) ::es_proto::EsInn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::EsInn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EsInn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEsInn}, {}};

static void InitDefaultsEinsummable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Einsummable_default_instance_;
    new (ptr) ::es_proto::Einsummable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Einsummable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Einsummable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEinsummable}, {
      &protobuf_einsummable_2eproto::scc_info_EsInn.base,}};

static void InitDefaultsEinsummableList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_EinsummableList_default_instance_;
    new (ptr) ::es_proto::EinsummableList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::EinsummableList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EinsummableList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEinsummableList}, {
      &protobuf_einsummable_2eproto::scc_info_Einsummable.base,}};

static void InitDefaultsTouchDim() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TouchDim_default_instance_;
    new (ptr) ::es_proto::TouchDim();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TouchDim::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TouchDim =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTouchDim}, {}};

static void InitDefaultsTouch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Touch_default_instance_;
    new (ptr) ::es_proto::Touch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Touch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Touch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTouch}, {
      &protobuf_einsummable_2eproto::scc_info_TouchDim.base,}};

static void InitDefaultsConstant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Constant_default_instance_;
    new (ptr) ::es_proto::Constant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Constant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Constant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConstant}, {}};

static void InitDefaultsLowertri() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Lowertri_default_instance_;
    new (ptr) ::es_proto::Lowertri();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Lowertri::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Lowertri =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLowertri}, {}};

static void InitDefaultsFill() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Fill_default_instance_;
    new (ptr) ::es_proto::Fill();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Fill::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Fill =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFill}, {
      &protobuf_einsummable_2eproto::scc_info_Constant.base,
      &protobuf_einsummable_2eproto::scc_info_Lowertri.base,}};

static void InitDefaultsTGInput() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGInput_default_instance_;
    new (ptr) ::es_proto::TGInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TGInput =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTGInput}, {}};

static void InitDefaultsTGApply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGApply_default_instance_;
    new (ptr) ::es_proto::TGApply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGApply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TGApply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTGApply}, {
      &protobuf_einsummable_2eproto::scc_info_Einsummable.base,}};

static void InitDefaultsTGMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGMove_default_instance_;
    new (ptr) ::es_proto::TGMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TGMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTGMove}, {}};

static void InitDefaultsTGConstant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGConstant_default_instance_;
    new (ptr) ::es_proto::TGConstant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGConstant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TGConstant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTGConstant}, {
      &protobuf_einsummable_2eproto::scc_info_Fill.base,}};

static void InitDefaultsInnRegionDim() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_InnRegionDim_default_instance_;
    new (ptr) ::es_proto::InnRegionDim();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::InnRegionDim::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InnRegionDim =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInnRegionDim}, {}};

static void InitDefaultsOutRegionDim() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_OutRegionDim_default_instance_;
    new (ptr) ::es_proto::OutRegionDim();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::OutRegionDim::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OutRegionDim =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOutRegionDim}, {}};

static void InitDefaultsTGPartialInn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGPartialInn_default_instance_;
    new (ptr) ::es_proto::TGPartialInn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGPartialInn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TGPartialInn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTGPartialInn}, {
      &protobuf_einsummable_2eproto::scc_info_InnRegionDim.base,}};

static void InitDefaultsTGPartialUnit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGPartialUnit_default_instance_;
    new (ptr) ::es_proto::TGPartialUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGPartialUnit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TGPartialUnit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTGPartialUnit}, {
      &protobuf_einsummable_2eproto::scc_info_OutRegionDim.base,
      &protobuf_einsummable_2eproto::scc_info_TGPartialInn.base,}};

static void InitDefaultsTGPartialize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TGPartialize_default_instance_;
    new (ptr) ::es_proto::TGPartialize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TGPartialize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TGPartialize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTGPartialize}, {
      &protobuf_einsummable_2eproto::scc_info_TGPartialUnit.base,}};

static void InitDefaultsTaskGraphNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TaskGraphNode_default_instance_;
    new (ptr) ::es_proto::TaskGraphNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TaskGraphNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_TaskGraphNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsTaskGraphNode}, {
      &protobuf_einsummable_2eproto::scc_info_TGInput.base,
      &protobuf_einsummable_2eproto::scc_info_TGApply.base,
      &protobuf_einsummable_2eproto::scc_info_TGMove.base,
      &protobuf_einsummable_2eproto::scc_info_TGConstant.base,
      &protobuf_einsummable_2eproto::scc_info_TGPartialize.base,}};

static void InitDefaultsTaskGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_TaskGraph_default_instance_;
    new (ptr) ::es_proto::TaskGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::TaskGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskGraph}, {
      &protobuf_einsummable_2eproto::scc_info_TaskGraphNode.base,}};

static void InitDefaultsPartdim() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Partdim_default_instance_;
    new (ptr) ::es_proto::Partdim();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Partdim::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Partdim =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPartdim}, {}};

static void InitDefaultsPartition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Partition_default_instance_;
    new (ptr) ::es_proto::Partition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Partition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Partition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPartition}, {
      &protobuf_einsummable_2eproto::scc_info_Partdim.base,}};

static void InitDefaultsPlacement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Placement_default_instance_;
    new (ptr) ::es_proto::Placement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Placement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Placement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlacement}, {
      &protobuf_einsummable_2eproto::scc_info_Partition.base,}};

static void InitDefaultsRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Relation_default_instance_;
    new (ptr) ::es_proto::Relation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Relation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Relation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelation}, {
      &protobuf_einsummable_2eproto::scc_info_Placement.base,}};

static void InitDefaultsRemapRelations() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_RemapRelations_default_instance_;
    new (ptr) ::es_proto::RemapRelations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::RemapRelations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemapRelations =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemapRelations}, {
      &protobuf_einsummable_2eproto::scc_info_Relation.base,}};

static void InitDefaultsMGInputMem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGInputMem_default_instance_;
    new (ptr) ::es_proto::MGInputMem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGInputMem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGInputMem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGInputMem}, {}};

static void InitDefaultsMGInputSto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGInputSto_default_instance_;
    new (ptr) ::es_proto::MGInputSto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGInputSto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGInputSto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGInputSto}, {}};

static void InitDefaultsMGConstant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGConstant_default_instance_;
    new (ptr) ::es_proto::MGConstant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGConstant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MGConstant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMGConstant}, {
      &protobuf_einsummable_2eproto::scc_info_Fill.base,}};

static void InitDefaultsMGApply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGApply_default_instance_;
    new (ptr) ::es_proto::MGApply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGApply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MGApply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMGApply}, {
      &protobuf_einsummable_2eproto::scc_info_Einsummable.base,
      &protobuf_einsummable_2eproto::scc_info_Touch.base,}};

static void InitDefaultsMGMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGMove_default_instance_;
    new (ptr) ::es_proto::MGMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGMove}, {}};

static void InitDefaultsMGEvict() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGEvict_default_instance_;
    new (ptr) ::es_proto::MGEvict();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGEvict::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGEvict =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGEvict}, {}};

static void InitDefaultsMGLoad() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGLoad_default_instance_;
    new (ptr) ::es_proto::MGLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGLoad::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGLoad =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGLoad}, {}};

static void InitDefaultsMGPartialize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGPartialize_default_instance_;
    new (ptr) ::es_proto::MGPartialize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGPartialize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGPartialize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGPartialize}, {}};

static void InitDefaultsMGAlloc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGAlloc_default_instance_;
    new (ptr) ::es_proto::MGAlloc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGAlloc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGAlloc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGAlloc}, {}};

static void InitDefaultsMGDel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MGDel_default_instance_;
    new (ptr) ::es_proto::MGDel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MGDel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MGDel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMGDel}, {}};

static void InitDefaultsMemGraphNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MemGraphNode_default_instance_;
    new (ptr) ::es_proto::MemGraphNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MemGraphNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<10> scc_info_MemGraphNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 10, InitDefaultsMemGraphNode}, {
      &protobuf_einsummable_2eproto::scc_info_MGInputMem.base,
      &protobuf_einsummable_2eproto::scc_info_MGInputSto.base,
      &protobuf_einsummable_2eproto::scc_info_MGConstant.base,
      &protobuf_einsummable_2eproto::scc_info_MGApply.base,
      &protobuf_einsummable_2eproto::scc_info_MGMove.base,
      &protobuf_einsummable_2eproto::scc_info_MGEvict.base,
      &protobuf_einsummable_2eproto::scc_info_MGLoad.base,
      &protobuf_einsummable_2eproto::scc_info_MGPartialize.base,
      &protobuf_einsummable_2eproto::scc_info_MGAlloc.base,
      &protobuf_einsummable_2eproto::scc_info_MGDel.base,}};

static void InitDefaultsMemGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MemGraph_default_instance_;
    new (ptr) ::es_proto::MemGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MemGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemGraph}, {
      &protobuf_einsummable_2eproto::scc_info_MemGraphNode.base,}};

static void InitDefaultsMem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_Mem_default_instance_;
    new (ptr) ::es_proto::Mem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::Mem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMem}, {}};

static void InitDefaultsMemLoc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_MemLoc_default_instance_;
    new (ptr) ::es_proto::MemLoc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::MemLoc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemLoc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemLoc}, {}};

static void InitDefaultsIEInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IEInit_default_instance_;
    new (ptr) ::es_proto::IEInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IEInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IEInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIEInit}, {}};

static void InitDefaultsIECloseReaders() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IECloseReaders_default_instance_;
    new (ptr) ::es_proto::IECloseReaders();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IECloseReaders::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IECloseReaders =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIECloseReaders}, {}};

static void InitDefaultsIELoadWeight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IELoadWeight_default_instance_;
    new (ptr) ::es_proto::IELoadWeight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IELoadWeight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IELoadWeight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIELoadWeight}, {
      &protobuf_einsummable_2eproto::scc_info_MemLoc.base,}};

static void InitDefaultsIELoadDataMatrix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IELoadDataMatrix_default_instance_;
    new (ptr) ::es_proto::IELoadDataMatrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IELoadDataMatrix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IELoadDataMatrix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIELoadDataMatrix}, {
      &protobuf_einsummable_2eproto::scc_info_Mem.base,}};

static void InitDefaultsIELoadMask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IELoadMask_default_instance_;
    new (ptr) ::es_proto::IELoadMask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IELoadMask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IELoadMask =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIELoadMask}, {
      &protobuf_einsummable_2eproto::scc_info_Mem.base,}};

static void InitDefaultsIELoadFreqsCis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IELoadFreqsCis_default_instance_;
    new (ptr) ::es_proto::IELoadFreqsCis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IELoadFreqsCis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IELoadFreqsCis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIELoadFreqsCis}, {
      &protobuf_einsummable_2eproto::scc_info_Mem.base,}};

static void InitDefaultsIEExecute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IEExecute_default_instance_;
    new (ptr) ::es_proto::IEExecute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IEExecute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IEExecute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIEExecute}, {
      &protobuf_einsummable_2eproto::scc_info_MemGraph.base,}};

static void InitDefaultsIEBuildNext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IEBuildNext_default_instance_;
    new (ptr) ::es_proto::IEBuildNext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IEBuildNext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IEBuildNext =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIEBuildNext}, {
      &protobuf_einsummable_2eproto::scc_info_Partition.base,
      &protobuf_einsummable_2eproto::scc_info_MemLoc.base,}};

static void InitDefaultsIERandom() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_IERandom_default_instance_;
    new (ptr) ::es_proto::IERandom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::IERandom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IERandom =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIERandom}, {
      &protobuf_einsummable_2eproto::scc_info_MemLoc.base,}};

static void InitDefaultsInferenceEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_InferenceEvent_default_instance_;
    new (ptr) ::es_proto::InferenceEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::InferenceEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_InferenceEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsInferenceEvent}, {
      &protobuf_einsummable_2eproto::scc_info_IEInit.base,
      &protobuf_einsummable_2eproto::scc_info_IECloseReaders.base,
      &protobuf_einsummable_2eproto::scc_info_IELoadWeight.base,
      &protobuf_einsummable_2eproto::scc_info_IELoadDataMatrix.base,
      &protobuf_einsummable_2eproto::scc_info_IELoadMask.base,
      &protobuf_einsummable_2eproto::scc_info_IELoadFreqsCis.base,
      &protobuf_einsummable_2eproto::scc_info_IEExecute.base,
      &protobuf_einsummable_2eproto::scc_info_IEBuildNext.base,
      &protobuf_einsummable_2eproto::scc_info_IERandom.base,}};

static void InitDefaultsInferenceEvents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::es_proto::_InferenceEvents_default_instance_;
    new (ptr) ::es_proto::InferenceEvents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::es_proto::InferenceEvents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InferenceEvents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInferenceEvents}, {
      &protobuf_einsummable_2eproto::scc_info_InferenceEvent.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EsInn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Einsummable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EinsummableList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TouchDim.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Touch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Constant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Lowertri.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Fill.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGInput.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGApply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGConstant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InnRegionDim.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OutRegionDim.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGPartialInn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGPartialUnit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TGPartialize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskGraphNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Partdim.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Partition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Placement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Relation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemapRelations.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGInputMem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGInputSto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGConstant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGApply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGEvict.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGLoad.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGPartialize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGAlloc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MGDel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemGraphNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemLoc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IEInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IECloseReaders.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IELoadWeight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IELoadDataMatrix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IELoadMask.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IELoadFreqsCis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IEExecute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IEBuildNext.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IERandom.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceEvents.base);
}

::google::protobuf::Metadata file_level_metadata[49];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EsInn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EsInn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EsInn, idxs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, join_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, inns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, out_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, join_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Einsummable, castable_),
  ~0u,
  ~0u,
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EinsummableList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EinsummableList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::EinsummableList, es_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, d_inn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, d_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, offset_inn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, offset_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TouchDim, size_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Touch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Touch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Touch, selection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Touch, castable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Touch, dtype_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Constant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Constant, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Constant, shape_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, upper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, ncol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, nrow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Lowertri, start_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Fill, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Fill, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Fill, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::es_proto::FillDefaultTypeInternal, constant_),
  offsetof(::es_proto::FillDefaultTypeInternal, lowertri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Fill, op_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGInput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGInput, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGInput, size_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGApply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGApply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGApply, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGApply, inns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGApply, einsummable_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, inn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGMove, size_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGConstant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGConstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGConstant, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGConstant, fill_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InnRegionDim, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InnRegionDim, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InnRegionDim, dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InnRegionDim, offset_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::OutRegionDim, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::OutRegionDim, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::OutRegionDim, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::OutRegionDim, size_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialInn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialInn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialInn, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialInn, consumable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialInn, region_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialUnit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialUnit, castable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialUnit, out_region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialUnit, inputs_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, write_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TGPartialize, units_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraphNode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraphNode, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraphNode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::es_proto::TaskGraphNodeDefaultTypeInternal, input_),
  offsetof(::es_proto::TaskGraphNodeDefaultTypeInternal, apply_),
  offsetof(::es_proto::TaskGraphNodeDefaultTypeInternal, move_),
  offsetof(::es_proto::TaskGraphNodeDefaultTypeInternal, constant_),
  offsetof(::es_proto::TaskGraphNodeDefaultTypeInternal, partialize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraphNode, is_save_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraphNode, node_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::TaskGraph, nodes_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partdim, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partdim, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partdim, spans_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Partition, partdims_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Placement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Placement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Placement, partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Placement, locations_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Relation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Relation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Relation, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Relation, placement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Relation, tids_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::RemapRelations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::RemapRelations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::RemapRelations, srcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::RemapRelations, dsts_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputMem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputMem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputMem, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputMem, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputMem, size_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputSto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputSto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputSto, storage_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputSto, storage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGInputSto, size_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGConstant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGConstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGConstant, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGConstant, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGConstant, fill_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, mems_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, mems_size_),
  offsetof(::es_proto::MGApplyDefaultTypeInternal, einsummable_),
  offsetof(::es_proto::MGApplyDefaultTypeInternal, touch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGApply, op_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, src_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, src_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, dst_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, dst_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGMove, size_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, storage_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, storage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGEvict, size_),
  0,
  1,
  4,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, storage_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, storage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGLoad, size_),
  0,
  1,
  4,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGPartialize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGPartialize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGPartialize, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGPartialize, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGPartialize, size_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGAlloc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGAlloc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGAlloc, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGAlloc, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGAlloc, size_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGDel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGDel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGDel, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGDel, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MGDel, size_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraphNode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraphNode, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraphNode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, inputmem_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, inputsto_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, constant_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, apply_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, move_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, evict_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, load_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, partialize_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, alloc_),
  offsetof(::es_proto::MemGraphNodeDefaultTypeInternal, del_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraphNode, inns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraphNode, node_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, num_compute_locs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, num_storage_locs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, storage_locs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemGraph, nodes_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Mem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Mem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Mem, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::Mem, size_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemLoc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemLoc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemLoc, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemLoc, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::MemLoc, loc_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, world_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, mem_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, num_threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, num_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEInit, seq_len_),
  1,
  0,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IECloseReaders, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IECloseReaders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IECloseReaders, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadWeight, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadWeight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadWeight, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadWeight, data_locs_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, seq_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, d_embed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadDataMatrix, mem_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadMask, seq_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadMask, mem_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, heads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, max_seq_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IELoadFreqsCis, mem_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEExecute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEExecute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEExecute, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEExecute, memgraph_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, src_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, src_data_locs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, dst_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IEBuildNext, dst_data_locs_),
  0,
  ~0u,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IERandom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IERandom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::IERandom, mems_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, init_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, close_readers_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, load_weight_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, load_data_matrix_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, load_mask_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, load_freqs_cis_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, execute_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, build_next_),
  offsetof(::es_proto::InferenceEventDefaultTypeInternal, random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvent, op_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::es_proto::InferenceEvents, event_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::es_proto::EsInn)},
  { 7, 17, sizeof(::es_proto::Einsummable)},
  { 22, 28, sizeof(::es_proto::EinsummableList)},
  { 29, 39, sizeof(::es_proto::TouchDim)},
  { 44, 52, sizeof(::es_proto::Touch)},
  { 55, 62, sizeof(::es_proto::Constant)},
  { 64, 74, sizeof(::es_proto::Lowertri)},
  { 79, 87, sizeof(::es_proto::Fill)},
  { 89, 96, sizeof(::es_proto::TGInput)},
  { 98, 106, sizeof(::es_proto::TGApply)},
  { 109, 118, sizeof(::es_proto::TGMove)},
  { 122, 129, sizeof(::es_proto::TGConstant)},
  { 131, 138, sizeof(::es_proto::InnRegionDim)},
  { 140, 147, sizeof(::es_proto::OutRegionDim)},
  { 149, 157, sizeof(::es_proto::TGPartialInn)},
  { 160, 168, sizeof(::es_proto::TGPartialUnit)},
  { 171, 180, sizeof(::es_proto::TGPartialize)},
  { 184, 196, sizeof(::es_proto::TaskGraphNode)},
  { 202, 208, sizeof(::es_proto::TaskGraph)},
  { 209, 215, sizeof(::es_proto::Partdim)},
  { 216, 222, sizeof(::es_proto::Partition)},
  { 223, 230, sizeof(::es_proto::Placement)},
  { 232, 240, sizeof(::es_proto::Relation)},
  { 243, 250, sizeof(::es_proto::RemapRelations)},
  { 252, 260, sizeof(::es_proto::MGInputMem)},
  { 263, 271, sizeof(::es_proto::MGInputSto)},
  { 274, 282, sizeof(::es_proto::MGConstant)},
  { 285, 297, sizeof(::es_proto::MGApply)},
  { 303, 313, sizeof(::es_proto::MGMove)},
  { 318, 328, sizeof(::es_proto::MGEvict)},
  { 333, 343, sizeof(::es_proto::MGLoad)},
  { 348, 356, sizeof(::es_proto::MGPartialize)},
  { 359, 367, sizeof(::es_proto::MGAlloc)},
  { 370, 378, sizeof(::es_proto::MGDel)},
  { 381, 398, sizeof(::es_proto::MemGraphNode)},
  { 409, 418, sizeof(::es_proto::MemGraph)},
  { 422, 429, sizeof(::es_proto::Mem)},
  { 431, 439, sizeof(::es_proto::MemLoc)},
  { 442, 453, sizeof(::es_proto::IEInit)},
  { 459, 465, sizeof(::es_proto::IECloseReaders)},
  { 466, 473, sizeof(::es_proto::IELoadWeight)},
  { 475, 484, sizeof(::es_proto::IELoadDataMatrix)},
  { 488, 495, sizeof(::es_proto::IELoadMask)},
  { 497, 506, sizeof(::es_proto::IELoadFreqsCis)},
  { 510, 517, sizeof(::es_proto::IEExecute)},
  { 519, 528, sizeof(::es_proto::IEBuildNext)},
  { 532, 538, sizeof(::es_proto::IERandom)},
  { 539, 554, sizeof(::es_proto::InferenceEvent)},
  { 563, 569, sizeof(::es_proto::InferenceEvents)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_EsInn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Einsummable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_EinsummableList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TouchDim_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Touch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Constant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Lowertri_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Fill_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGApply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGConstant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_InnRegionDim_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_OutRegionDim_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGPartialInn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGPartialUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TGPartialize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TaskGraphNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_TaskGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Partdim_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Partition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Placement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Relation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_RemapRelations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGInputMem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGInputSto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGConstant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGApply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGEvict_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGPartialize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGAlloc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MGDel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MemGraphNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MemGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_Mem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_MemLoc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IEInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IECloseReaders_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IELoadWeight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IELoadDataMatrix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IELoadMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IELoadFreqsCis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IEExecute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IEBuildNext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_IERandom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_InferenceEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::es_proto::_InferenceEvents_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "einsummable.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 49);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021einsummable.proto\022\010es_proto\"\025\n\005EsInn\022\014"
      "\n\004idxs\030\001 \003(\005\"r\n\013Einsummable\022\022\n\njoin_shap"
      "e\030\001 \003(\004\022\035\n\004inns\030\002 \003(\0132\017.es_proto.EsInn\022\020"
      "\n\010out_rank\030\003 \002(\005\022\014\n\004join\030\004 \002(\t\022\020\n\010castab"
      "le\030\005 \001(\t\"4\n\017EinsummableList\022!\n\002es\030\001 \003(\0132"
      "\025.es_proto.Einsummable\"^\n\010TouchDim\022\r\n\005d_"
      "inn\030\001 \002(\004\022\r\n\005d_out\030\002 \002(\004\022\022\n\noffset_inn\030\003"
      " \002(\004\022\022\n\noffset_out\030\004 \002(\004\022\014\n\004size\030\005 \002(\004\"O"
      "\n\005Touch\022%\n\tselection\030\001 \003(\0132\022.es_proto.To"
      "uchDim\022\020\n\010castable\030\002 \001(\t\022\r\n\005dtype\030\003 \002(\t\""
      "(\n\010Constant\022\r\n\005value\030\001 \002(\t\022\r\n\005shape\030\002 \003("
      "\004\"S\n\010Lowertri\022\r\n\005lower\030\001 \002(\t\022\r\n\005upper\030\002 "
      "\002(\t\022\014\n\004ncol\030\003 \002(\004\022\014\n\004nrow\030\004 \002(\004\022\r\n\005start"
      "\030\005 \002(\003\"\\\n\004Fill\022&\n\010constant\030\001 \001(\0132\022.es_pr"
      "oto.ConstantH\000\022&\n\010lowertri\030\002 \001(\0132\022.es_pr"
      "oto.LowertriH\000B\004\n\002op\"$\n\007TGInput\022\013\n\003loc\030\001"
      " \002(\005\022\014\n\004size\030\002 \002(\004\"P\n\007TGApply\022\013\n\003loc\030\001 \002"
      "(\005\022\014\n\004inns\030\002 \003(\005\022*\n\013einsummable\030\003 \002(\0132\025."
      "es_proto.Einsummable\"=\n\006TGMove\022\013\n\003src\030\001 "
      "\002(\005\022\013\n\003dst\030\002 \002(\005\022\013\n\003inn\030\003 \002(\005\022\014\n\004size\030\004 "
      "\002(\004\"7\n\nTGConstant\022\013\n\003loc\030\001 \002(\005\022\034\n\004fill\030\002"
      " \002(\0132\016.es_proto.Fill\"+\n\014InnRegionDim\022\013\n\003"
      "dim\030\001 \002(\004\022\016\n\006offset\030\002 \002(\004\",\n\014OutRegionDi"
      "m\022\016\n\006offset\030\001 \002(\004\022\014\n\004size\030\002 \002(\004\"V\n\014TGPar"
      "tialInn\022\n\n\002id\030\001 \002(\005\022\022\n\nconsumable\030\002 \002(\010\022"
      "&\n\006region\030\003 \003(\0132\026.es_proto.InnRegionDim\""
      "u\n\rTGPartialUnit\022\020\n\010castable\030\001 \001(\t\022*\n\nou"
      "t_region\030\002 \003(\0132\026.es_proto.OutRegionDim\022&"
      "\n\006inputs\030\003 \003(\0132\026.es_proto.TGPartialInn\"g"
      "\n\014TGPartialize\022\013\n\003loc\030\001 \002(\005\022\r\n\005dtype\030\002 \002"
      "(\t\022\023\n\013write_shape\030\003 \003(\004\022&\n\005units\030\004 \003(\0132\027"
      ".es_proto.TGPartialUnit\"\352\001\n\rTaskGraphNod"
      "e\022\"\n\005input\030\001 \001(\0132\021.es_proto.TGInputH\000\022\"\n"
      "\005apply\030\002 \001(\0132\021.es_proto.TGApplyH\000\022 \n\004mov"
      "e\030\003 \001(\0132\020.es_proto.TGMoveH\000\022(\n\010constant\030"
      "\004 \001(\0132\024.es_proto.TGConstantH\000\022,\n\npartial"
      "ize\030\005 \001(\0132\026.es_proto.TGPartializeH\000\022\017\n\007i"
      "s_save\030\006 \002(\010B\006\n\004node\"3\n\tTaskGraph\022&\n\005nod"
      "es\030\001 \003(\0132\027.es_proto.TaskGraphNode\"\030\n\007Par"
      "tdim\022\r\n\005spans\030\001 \003(\004\"0\n\tPartition\022#\n\010part"
      "dims\030\001 \003(\0132\021.es_proto.Partdim\"F\n\tPlaceme"
      "nt\022&\n\tpartition\030\001 \002(\0132\023.es_proto.Partiti"
      "on\022\021\n\tlocations\030\002 \003(\005\"O\n\010Relation\022\r\n\005dty"
      "pe\030\001 \002(\t\022&\n\tplacement\030\002 \002(\0132\023.es_proto.P"
      "lacement\022\014\n\004tids\030\004 \003(\005\"T\n\016RemapRelations"
      "\022 \n\004srcs\030\001 \003(\0132\022.es_proto.Relation\022 \n\004ds"
      "ts\030\002 \003(\0132\022.es_proto.Relation\"7\n\nMGInputM"
      "em\022\013\n\003loc\030\001 \002(\005\022\016\n\006offset\030\002 \002(\004\022\014\n\004size\030"
      "\003 \002(\004\"C\n\nMGInputSto\022\023\n\013storage_loc\030\001 \002(\005"
      "\022\022\n\nstorage_id\030\002 \002(\005\022\014\n\004size\030\003 \002(\004\"G\n\nMG"
      "Constant\022\013\n\003loc\030\001 \002(\005\022\016\n\006offset\030\002 \002(\004\022\034\n"
      "\004fill\030\003 \002(\0132\016.es_proto.Fill\"\243\001\n\007MGApply\022"
      "\013\n\003loc\030\001 \002(\005\022\023\n\013mems_offset\030\002 \003(\004\022\021\n\tmem"
      "s_size\030\003 \003(\004\022,\n\013einsummable\030\004 \001(\0132\025.es_p"
      "roto.EinsummableH\000\022 \n\005touch\030\005 \001(\0132\017.es_p"
      "roto.TouchH\000\022\r\n\005group\030\006 \002(\005B\004\n\002op\"`\n\006MGM"
      "ove\022\017\n\007src_loc\030\001 \002(\005\022\022\n\nsrc_offset\030\002 \002(\004"
      "\022\017\n\007dst_loc\030\003 \002(\005\022\022\n\ndst_offset\030\004 \002(\004\022\014\n"
      "\004size\030\005 \002(\004\"]\n\007MGEvict\022\023\n\013storage_loc\030\001 "
      "\002(\005\022\022\n\nstorage_id\030\002 \002(\005\022\013\n\003loc\030\003 \002(\005\022\016\n\006"
      "offset\030\004 \002(\004\022\014\n\004size\030\005 \002(\004\"\\\n\006MGLoad\022\023\n\013"
      "storage_loc\030\001 \002(\005\022\022\n\nstorage_id\030\002 \002(\005\022\013\n"
      "\003loc\030\003 \002(\005\022\016\n\006offset\030\004 \002(\004\022\014\n\004size\030\005 \002(\004"
      "\"9\n\014MGPartialize\022\013\n\003loc\030\001 \002(\005\022\016\n\006offset\030"
      "\002 \002(\004\022\014\n\004size\030\003 \002(\004\"4\n\007MGAlloc\022\013\n\003loc\030\001 "
      "\002(\005\022\016\n\006offset\030\002 \002(\004\022\014\n\004size\030\003 \002(\004\"2\n\005MGD"
      "el\022\013\n\003loc\030\001 \002(\005\022\016\n\006offset\030\002 \002(\004\022\014\n\004size\030"
      "\003 \002(\004\"\240\003\n\014MemGraphNode\022(\n\010inputmem\030\001 \001(\013"
      "2\024.es_proto.MGInputMemH\000\022(\n\010inputsto\030\002 \001"
      "(\0132\024.es_proto.MGInputStoH\000\022(\n\010constant\030\003"
      " \001(\0132\024.es_proto.MGConstantH\000\022\"\n\005apply\030\004 "
      "\001(\0132\021.es_proto.MGApplyH\000\022 \n\004move\030\005 \001(\0132\020"
      ".es_proto.MGMoveH\000\022\"\n\005evict\030\006 \001(\0132\021.es_p"
      "roto.MGEvictH\000\022 \n\004load\030\007 \001(\0132\020.es_proto."
      "MGLoadH\000\022,\n\npartialize\030\010 \001(\0132\026.es_proto."
      "MGPartializeH\000\022\"\n\005alloc\030\t \001(\0132\021.es_proto"
      ".MGAllocH\000\022\036\n\003del\030\n \001(\0132\017.es_proto.MGDel"
      "H\000\022\014\n\004inns\030\013 \003(\005B\006\n\004node\"{\n\010MemGraph\022\030\n\020"
      "num_compute_locs\030\001 \002(\005\022\030\n\020num_storage_lo"
      "cs\030\002 \002(\005\022\024\n\014storage_locs\030\003 \003(\005\022%\n\005nodes\030"
      "\004 \003(\0132\026.es_proto.MemGraphNode\"#\n\003Mem\022\016\n\006"
      "offset\030\001 \002(\004\022\014\n\004size\030\002 \002(\004\"3\n\006MemLoc\022\016\n\006"
      "offset\030\001 \002(\004\022\014\n\004size\030\002 \002(\004\022\013\n\003loc\030\003 \002(\005\""
      "{\n\006IEInit\022\022\n\nworld_size\030\001 \002(\005\022\020\n\010mem_siz"
      "e\030\002 \002(\004\022\023\n\013num_threads\030\003 \002(\005\022\021\n\tnum_file"
      "s\030\004 \002(\005\022\022\n\nbatch_size\030\005 \002(\004\022\017\n\007seq_len\030\006"
      " \002(\004\"\037\n\016IECloseReaders\022\r\n\005dummy\030\001 \002(\005\"A\n"
      "\014IELoadWeight\022\014\n\004name\030\001 \002(\t\022#\n\tdata_locs"
      "\030\002 \003(\0132\020.es_proto.MemLoc\"d\n\020IELoadDataMa"
      "trix\022\022\n\nbatch_size\030\001 \002(\004\022\017\n\007seq_len\030\002 \002("
      "\004\022\017\n\007d_embed\030\003 \002(\004\022\032\n\003mem\030\004 \002(\0132\r.es_pro"
      "to.Mem\"9\n\nIELoadMask\022\017\n\007seq_len\030\001 \002(\004\022\032\n"
      "\003mem\030\002 \002(\0132\r.es_proto.Mem\"]\n\016IELoadFreqs"
      "Cis\022\013\n\003dim\030\001 \002(\004\022\r\n\005heads\030\002 \002(\004\022\023\n\013max_s"
      "eq_len\030\003 \002(\004\022\032\n\003mem\030\004 \002(\0132\r.es_proto.Mem"
      "\">\n\tIEExecute\022\013\n\003msg\030\001 \002(\t\022$\n\010memgraph\030\002"
      " \002(\0132\022.es_proto.MemGraph\"\255\001\n\013IEBuildNext"
      "\022%\n\010src_part\030\001 \002(\0132\023.es_proto.Partition\022"
      "\'\n\rsrc_data_locs\030\002 \003(\0132\020.es_proto.MemLoc"
      "\022%\n\010dst_part\030\003 \002(\0132\023.es_proto.Partition\022"
      "\'\n\rdst_data_locs\030\004 \003(\0132\020.es_proto.MemLoc"
      "\"*\n\010IERandom\022\036\n\004mems\030\001 \003(\0132\020.es_proto.Me"
      "mLoc\"\254\003\n\016InferenceEvent\022 \n\004init\030\001 \001(\0132\020."
      "es_proto.IEInitH\000\0221\n\rclose_readers\030\002 \001(\013"
      "2\030.es_proto.IECloseReadersH\000\022-\n\013load_wei"
      "ght\030\003 \001(\0132\026.es_proto.IELoadWeightH\000\0226\n\020l"
      "oad_data_matrix\030\004 \001(\0132\032.es_proto.IELoadD"
      "ataMatrixH\000\022)\n\tload_mask\030\005 \001(\0132\024.es_prot"
      "o.IELoadMaskH\000\0222\n\016load_freqs_cis\030\006 \001(\0132\030"
      ".es_proto.IELoadFreqsCisH\000\022&\n\007execute\030\007 "
      "\001(\0132\023.es_proto.IEExecuteH\000\022+\n\nbuild_next"
      "\030\010 \001(\0132\025.es_proto.IEBuildNextH\000\022$\n\006rando"
      "m\030\t \001(\0132\022.es_proto.IERandomH\000B\004\n\002op\":\n\017I"
      "nferenceEvents\022\'\n\005event\030\001 \003(\0132\030.es_proto"
      ".InferenceEvent"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4575);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "einsummable.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_einsummable_2eproto
namespace es_proto {

// ===================================================================

void EsInn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EsInn::kIdxsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EsInn::EsInn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_EsInn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.EsInn)
}
EsInn::EsInn(const EsInn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      idxs_(from.idxs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.EsInn)
}

void EsInn::SharedCtor() {
}

EsInn::~EsInn() {
  // @@protoc_insertion_point(destructor:es_proto.EsInn)
  SharedDtor();
}

void EsInn::SharedDtor() {
}

void EsInn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EsInn::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EsInn& EsInn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_EsInn.base);
  return *internal_default_instance();
}


void EsInn::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.EsInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idxs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EsInn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.EsInn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 idxs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_idxs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_idxs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.EsInn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.EsInn)
  return false;
#undef DO_
}

void EsInn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.EsInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 idxs = 1;
  for (int i = 0, n = this->idxs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->idxs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.EsInn)
}

::google::protobuf::uint8* EsInn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.EsInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 idxs = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->idxs_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.EsInn)
  return target;
}

size_t EsInn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.EsInn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 idxs = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->idxs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->idxs_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EsInn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.EsInn)
  GOOGLE_DCHECK_NE(&from, this);
  const EsInn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EsInn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.EsInn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.EsInn)
    MergeFrom(*source);
  }
}

void EsInn::MergeFrom(const EsInn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.EsInn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  idxs_.MergeFrom(from.idxs_);
}

void EsInn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.EsInn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EsInn::CopyFrom(const EsInn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.EsInn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EsInn::IsInitialized() const {
  return true;
}

void EsInn::Swap(EsInn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EsInn::InternalSwap(EsInn* other) {
  using std::swap;
  idxs_.InternalSwap(&other->idxs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EsInn::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Einsummable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Einsummable::kJoinShapeFieldNumber;
const int Einsummable::kInnsFieldNumber;
const int Einsummable::kOutRankFieldNumber;
const int Einsummable::kJoinFieldNumber;
const int Einsummable::kCastableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Einsummable::Einsummable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Einsummable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Einsummable)
}
Einsummable::Einsummable(const Einsummable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      join_shape_(from.join_shape_),
      inns_(from.inns_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  join_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_join()) {
    join_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.join_);
  }
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_castable()) {
    castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
  }
  out_rank_ = from.out_rank_;
  // @@protoc_insertion_point(copy_constructor:es_proto.Einsummable)
}

void Einsummable::SharedCtor() {
  join_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_rank_ = 0;
}

Einsummable::~Einsummable() {
  // @@protoc_insertion_point(destructor:es_proto.Einsummable)
  SharedDtor();
}

void Einsummable::SharedDtor() {
  join_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  castable_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Einsummable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Einsummable::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Einsummable& Einsummable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Einsummable.base);
  return *internal_default_instance();
}


void Einsummable::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Einsummable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  join_shape_.Clear();
  inns_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      join_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      castable_.ClearNonDefaultToEmptyNoArena();
    }
  }
  out_rank_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Einsummable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Einsummable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 join_shape = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_join_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_join_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.EsInn inns = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 out_rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_out_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string join = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_join()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->join().data(), static_cast<int>(this->join().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Einsummable.join");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string castable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castable()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->castable().data(), static_cast<int>(this->castable().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Einsummable.castable");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Einsummable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Einsummable)
  return false;
#undef DO_
}

void Einsummable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Einsummable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 join_shape = 1;
  for (int i = 0, n = this->join_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->join_shape(i), output);
  }

  // repeated .es_proto.EsInn inns = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->inns(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 out_rank = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->out_rank(), output);
  }

  // required string join = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->join().data(), static_cast<int>(this->join().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Einsummable.join");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->join(), output);
  }

  // optional string castable = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Einsummable.castable");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->castable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Einsummable)
}

::google::protobuf::uint8* Einsummable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Einsummable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 join_shape = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->join_shape_, target);

  // repeated .es_proto.EsInn inns = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->inns(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 out_rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->out_rank(), target);
  }

  // required string join = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->join().data(), static_cast<int>(this->join().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Einsummable.join");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->join(), target);
  }

  // optional string castable = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Einsummable.castable");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->castable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Einsummable)
  return target;
}

size_t Einsummable::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.Einsummable)
  size_t total_size = 0;

  if (has_join()) {
    // required string join = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->join());
  }

  if (has_out_rank()) {
    // required int32 out_rank = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out_rank());
  }

  return total_size;
}
size_t Einsummable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Einsummable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string join = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->join());

    // required int32 out_rank = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out_rank());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 join_shape = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->join_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->join_shape_size());
    total_size += data_size;
  }

  // repeated .es_proto.EsInn inns = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inns(static_cast<int>(i)));
    }
  }

  // optional string castable = 5;
  if (has_castable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->castable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Einsummable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Einsummable)
  GOOGLE_DCHECK_NE(&from, this);
  const Einsummable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Einsummable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Einsummable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Einsummable)
    MergeFrom(*source);
  }
}

void Einsummable::MergeFrom(const Einsummable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Einsummable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  join_shape_.MergeFrom(from.join_shape_);
  inns_.MergeFrom(from.inns_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_join();
      join_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.join_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_castable();
      castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
    }
    if (cached_has_bits & 0x00000004u) {
      out_rank_ = from.out_rank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Einsummable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Einsummable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Einsummable::CopyFrom(const Einsummable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Einsummable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Einsummable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void Einsummable::Swap(Einsummable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Einsummable::InternalSwap(Einsummable* other) {
  using std::swap;
  join_shape_.InternalSwap(&other->join_shape_);
  CastToBase(&inns_)->InternalSwap(CastToBase(&other->inns_));
  join_.Swap(&other->join_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  castable_.Swap(&other->castable_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(out_rank_, other->out_rank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Einsummable::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EinsummableList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EinsummableList::kEsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EinsummableList::EinsummableList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_EinsummableList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.EinsummableList)
}
EinsummableList::EinsummableList(const EinsummableList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      es_(from.es_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.EinsummableList)
}

void EinsummableList::SharedCtor() {
}

EinsummableList::~EinsummableList() {
  // @@protoc_insertion_point(destructor:es_proto.EinsummableList)
  SharedDtor();
}

void EinsummableList::SharedDtor() {
}

void EinsummableList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EinsummableList::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EinsummableList& EinsummableList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_EinsummableList.base);
  return *internal_default_instance();
}


void EinsummableList::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.EinsummableList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  es_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EinsummableList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.EinsummableList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.Einsummable es = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_es()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.EinsummableList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.EinsummableList)
  return false;
#undef DO_
}

void EinsummableList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.EinsummableList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Einsummable es = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->es_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->es(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.EinsummableList)
}

::google::protobuf::uint8* EinsummableList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.EinsummableList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Einsummable es = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->es_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->es(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.EinsummableList)
  return target;
}

size_t EinsummableList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.EinsummableList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.Einsummable es = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->es_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->es(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EinsummableList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.EinsummableList)
  GOOGLE_DCHECK_NE(&from, this);
  const EinsummableList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EinsummableList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.EinsummableList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.EinsummableList)
    MergeFrom(*source);
  }
}

void EinsummableList::MergeFrom(const EinsummableList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.EinsummableList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  es_.MergeFrom(from.es_);
}

void EinsummableList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.EinsummableList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EinsummableList::CopyFrom(const EinsummableList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.EinsummableList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EinsummableList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->es())) return false;
  return true;
}

void EinsummableList::Swap(EinsummableList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EinsummableList::InternalSwap(EinsummableList* other) {
  using std::swap;
  CastToBase(&es_)->InternalSwap(CastToBase(&other->es_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EinsummableList::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TouchDim::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TouchDim::kDInnFieldNumber;
const int TouchDim::kDOutFieldNumber;
const int TouchDim::kOffsetInnFieldNumber;
const int TouchDim::kOffsetOutFieldNumber;
const int TouchDim::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TouchDim::TouchDim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TouchDim.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TouchDim)
}
TouchDim::TouchDim(const TouchDim& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&d_inn_, &from.d_inn_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&d_inn_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:es_proto.TouchDim)
}

void TouchDim::SharedCtor() {
  ::memset(&d_inn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&d_inn_)) + sizeof(size_));
}

TouchDim::~TouchDim() {
  // @@protoc_insertion_point(destructor:es_proto.TouchDim)
  SharedDtor();
}

void TouchDim::SharedDtor() {
}

void TouchDim::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TouchDim::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TouchDim& TouchDim::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TouchDim.base);
  return *internal_default_instance();
}


void TouchDim::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TouchDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&d_inn_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&d_inn_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TouchDim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TouchDim)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 d_inn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_d_inn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &d_inn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 d_out = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_d_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &d_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset_inn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset_inn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_inn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset_out = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TouchDim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TouchDim)
  return false;
#undef DO_
}

void TouchDim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TouchDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 d_inn = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->d_inn(), output);
  }

  // required uint64 d_out = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->d_out(), output);
  }

  // required uint64 offset_inn = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset_inn(), output);
  }

  // required uint64 offset_out = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset_out(), output);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TouchDim)
}

::google::protobuf::uint8* TouchDim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TouchDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 d_inn = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->d_inn(), target);
  }

  // required uint64 d_out = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->d_out(), target);
  }

  // required uint64 offset_inn = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset_inn(), target);
  }

  // required uint64 offset_out = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset_out(), target);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TouchDim)
  return target;
}

size_t TouchDim::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TouchDim)
  size_t total_size = 0;

  if (has_d_inn()) {
    // required uint64 d_inn = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_inn());
  }

  if (has_d_out()) {
    // required uint64 d_out = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_out());
  }

  if (has_offset_inn()) {
    // required uint64 offset_inn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_inn());
  }

  if (has_offset_out()) {
    // required uint64 offset_out = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_out());
  }

  if (has_size()) {
    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t TouchDim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TouchDim)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 d_inn = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_inn());

    // required uint64 d_out = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_out());

    // required uint64 offset_inn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_inn());

    // required uint64 offset_out = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_out());

    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TouchDim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TouchDim)
  GOOGLE_DCHECK_NE(&from, this);
  const TouchDim* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TouchDim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TouchDim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TouchDim)
    MergeFrom(*source);
  }
}

void TouchDim::MergeFrom(const TouchDim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TouchDim)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      d_inn_ = from.d_inn_;
    }
    if (cached_has_bits & 0x00000002u) {
      d_out_ = from.d_out_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_inn_ = from.offset_inn_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_out_ = from.offset_out_;
    }
    if (cached_has_bits & 0x00000010u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TouchDim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TouchDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TouchDim::CopyFrom(const TouchDim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TouchDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TouchDim::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void TouchDim::Swap(TouchDim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TouchDim::InternalSwap(TouchDim* other) {
  using std::swap;
  swap(d_inn_, other->d_inn_);
  swap(d_out_, other->d_out_);
  swap(offset_inn_, other->offset_inn_);
  swap(offset_out_, other->offset_out_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TouchDim::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Touch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Touch::kSelectionFieldNumber;
const int Touch::kCastableFieldNumber;
const int Touch::kDtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Touch::Touch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Touch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Touch)
}
Touch::Touch(const Touch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      selection_(from.selection_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_castable()) {
    castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
  }
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dtype()) {
    dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.Touch)
}

void Touch::SharedCtor() {
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Touch::~Touch() {
  // @@protoc_insertion_point(destructor:es_proto.Touch)
  SharedDtor();
}

void Touch::SharedDtor() {
  castable_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Touch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Touch::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Touch& Touch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Touch.base);
  return *internal_default_instance();
}


void Touch::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Touch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selection_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      castable_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dtype_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Touch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Touch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.TouchDim selection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_selection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string castable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castable()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->castable().data(), static_cast<int>(this->castable().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Touch.castable");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dtype().data(), static_cast<int>(this->dtype().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Touch.dtype");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Touch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Touch)
  return false;
#undef DO_
}

void Touch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Touch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.TouchDim selection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->selection(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string castable = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Touch.castable");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->castable(), output);
  }

  // required string dtype = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Touch.dtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Touch)
}

::google::protobuf::uint8* Touch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Touch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.TouchDim selection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->selection(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string castable = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Touch.castable");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->castable(), target);
  }

  // required string dtype = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Touch.dtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Touch)
  return target;
}

size_t Touch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Touch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dtype = 3;
  if (has_dtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dtype());
  }
  // repeated .es_proto.TouchDim selection = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->selection_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selection(static_cast<int>(i)));
    }
  }

  // optional string castable = 2;
  if (has_castable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->castable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Touch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Touch)
  GOOGLE_DCHECK_NE(&from, this);
  const Touch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Touch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Touch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Touch)
    MergeFrom(*source);
  }
}

void Touch::MergeFrom(const Touch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Touch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  selection_.MergeFrom(from.selection_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_castable();
      castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dtype();
      dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
    }
  }
}

void Touch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Touch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Touch::CopyFrom(const Touch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Touch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Touch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->selection())) return false;
  return true;
}

void Touch::Swap(Touch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Touch::InternalSwap(Touch* other) {
  using std::swap;
  CastToBase(&selection_)->InternalSwap(CastToBase(&other->selection_));
  castable_.Swap(&other->castable_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dtype_.Swap(&other->dtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Touch::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Constant::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Constant::kValueFieldNumber;
const int Constant::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Constant::Constant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Constant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Constant)
}
Constant::Constant(const Constant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.Constant)
}

void Constant::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Constant::~Constant() {
  // @@protoc_insertion_point(destructor:es_proto.Constant)
  SharedDtor();
}

void Constant::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Constant::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Constant& Constant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Constant.base);
  return *internal_default_instance();
}


void Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Constant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Constant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Constant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Constant.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Constant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Constant)
  return false;
#undef DO_
}

void Constant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Constant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Constant.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // repeated uint64 shape = 2;
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->shape(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Constant)
}

::google::protobuf::uint8* Constant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Constant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Constant.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // repeated uint64 shape = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->shape_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Constant)
  return target;
}

size_t Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Constant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }
  // repeated uint64 shape = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shape_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Constant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Constant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Constant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Constant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Constant)
    MergeFrom(*source);
  }
}

void Constant::MergeFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Constant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Constant::CopyFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Constant::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Constant::Swap(Constant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Constant::InternalSwap(Constant* other) {
  using std::swap;
  shape_.InternalSwap(&other->shape_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Constant::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lowertri::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lowertri::kLowerFieldNumber;
const int Lowertri::kUpperFieldNumber;
const int Lowertri::kNcolFieldNumber;
const int Lowertri::kNrowFieldNumber;
const int Lowertri::kStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lowertri::Lowertri()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Lowertri.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Lowertri)
}
Lowertri::Lowertri(const Lowertri& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lower()) {
    lower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lower_);
  }
  upper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upper()) {
    upper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upper_);
  }
  ::memcpy(&ncol_, &from.ncol_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&ncol_)) + sizeof(start_));
  // @@protoc_insertion_point(copy_constructor:es_proto.Lowertri)
}

void Lowertri::SharedCtor() {
  lower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_) -
      reinterpret_cast<char*>(&ncol_)) + sizeof(start_));
}

Lowertri::~Lowertri() {
  // @@protoc_insertion_point(destructor:es_proto.Lowertri)
  SharedDtor();
}

void Lowertri::SharedDtor() {
  lower_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upper_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Lowertri::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Lowertri::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lowertri& Lowertri::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Lowertri.base);
  return *internal_default_instance();
}


void Lowertri::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Lowertri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lower_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      upper_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&ncol_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_) -
        reinterpret_cast<char*>(&ncol_)) + sizeof(start_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Lowertri::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Lowertri)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string lower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lower()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lower().data(), static_cast<int>(this->lower().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Lowertri.lower");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string upper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upper()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upper().data(), static_cast<int>(this->upper().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Lowertri.upper");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 ncol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ncol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ncol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 nrow = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_nrow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nrow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 start = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Lowertri)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Lowertri)
  return false;
#undef DO_
}

void Lowertri::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Lowertri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string lower = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lower().data(), static_cast<int>(this->lower().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Lowertri.lower");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lower(), output);
  }

  // required string upper = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upper().data(), static_cast<int>(this->upper().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Lowertri.upper");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->upper(), output);
  }

  // required uint64 ncol = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ncol(), output);
  }

  // required uint64 nrow = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nrow(), output);
  }

  // required int64 start = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Lowertri)
}

::google::protobuf::uint8* Lowertri::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Lowertri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string lower = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lower().data(), static_cast<int>(this->lower().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Lowertri.lower");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lower(), target);
  }

  // required string upper = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upper().data(), static_cast<int>(this->upper().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Lowertri.upper");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->upper(), target);
  }

  // required uint64 ncol = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ncol(), target);
  }

  // required uint64 nrow = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->nrow(), target);
  }

  // required int64 start = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Lowertri)
  return target;
}

size_t Lowertri::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.Lowertri)
  size_t total_size = 0;

  if (has_lower()) {
    // required string lower = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lower());
  }

  if (has_upper()) {
    // required string upper = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upper());
  }

  if (has_ncol()) {
    // required uint64 ncol = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ncol());
  }

  if (has_nrow()) {
    // required uint64 nrow = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nrow());
  }

  if (has_start()) {
    // required int64 start = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());
  }

  return total_size;
}
size_t Lowertri::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Lowertri)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string lower = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lower());

    // required string upper = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upper());

    // required uint64 ncol = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ncol());

    // required uint64 nrow = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nrow());

    // required int64 start = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Lowertri::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Lowertri)
  GOOGLE_DCHECK_NE(&from, this);
  const Lowertri* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lowertri>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Lowertri)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Lowertri)
    MergeFrom(*source);
  }
}

void Lowertri::MergeFrom(const Lowertri& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Lowertri)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lower();
      lower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lower_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_upper();
      upper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upper_);
    }
    if (cached_has_bits & 0x00000004u) {
      ncol_ = from.ncol_;
    }
    if (cached_has_bits & 0x00000008u) {
      nrow_ = from.nrow_;
    }
    if (cached_has_bits & 0x00000010u) {
      start_ = from.start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Lowertri::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Lowertri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lowertri::CopyFrom(const Lowertri& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Lowertri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lowertri::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void Lowertri::Swap(Lowertri* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lowertri::InternalSwap(Lowertri* other) {
  using std::swap;
  lower_.Swap(&other->lower_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  upper_.Swap(&other->upper_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ncol_, other->ncol_);
  swap(nrow_, other->nrow_);
  swap(start_, other->start_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Lowertri::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Fill::InitAsDefaultInstance() {
  ::es_proto::_Fill_default_instance_.constant_ = const_cast< ::es_proto::Constant*>(
      ::es_proto::Constant::internal_default_instance());
  ::es_proto::_Fill_default_instance_.lowertri_ = const_cast< ::es_proto::Lowertri*>(
      ::es_proto::Lowertri::internal_default_instance());
}
void Fill::set_allocated_constant(::es_proto::Constant* constant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (constant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      constant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    op_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.Fill.constant)
}
void Fill::set_allocated_lowertri(::es_proto::Lowertri* lowertri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (lowertri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lowertri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lowertri, submessage_arena);
    }
    set_has_lowertri();
    op_.lowertri_ = lowertri;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.Fill.lowertri)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fill::kConstantFieldNumber;
const int Fill::kLowertriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fill::Fill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Fill.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Fill)
}
Fill::Fill(const Fill& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_op();
  switch (from.op_case()) {
    case kConstant: {
      mutable_constant()->::es_proto::Constant::MergeFrom(from.constant());
      break;
    }
    case kLowertri: {
      mutable_lowertri()->::es_proto::Lowertri::MergeFrom(from.lowertri());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.Fill)
}

void Fill::SharedCtor() {
  clear_has_op();
}

Fill::~Fill() {
  // @@protoc_insertion_point(destructor:es_proto.Fill)
  SharedDtor();
}

void Fill::SharedDtor() {
  if (has_op()) {
    clear_op();
  }
}

void Fill::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Fill::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Fill& Fill::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Fill.base);
  return *internal_default_instance();
}


void Fill::clear_op() {
// @@protoc_insertion_point(one_of_clear_start:es_proto.Fill)
  switch (op_case()) {
    case kConstant: {
      delete op_.constant_;
      break;
    }
    case kLowertri: {
      delete op_.lowertri_;
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OP_NOT_SET;
}


void Fill::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Fill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_op();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Fill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Fill)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .es_proto.Constant constant = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.Lowertri lowertri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lowertri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Fill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Fill)
  return false;
#undef DO_
}

void Fill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Fill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (op_case()) {
    case kConstant:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_constant(), output);
      break;
    case kLowertri:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_lowertri(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Fill)
}

::google::protobuf::uint8* Fill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Fill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (op_case()) {
    case kConstant:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_constant(), deterministic, target);
      break;
    case kLowertri:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_lowertri(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Fill)
  return target;
}

size_t Fill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Fill)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (op_case()) {
    // optional .es_proto.Constant constant = 1;
    case kConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.constant_);
      break;
    }
    // optional .es_proto.Lowertri lowertri = 2;
    case kLowertri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.lowertri_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Fill)
  GOOGLE_DCHECK_NE(&from, this);
  const Fill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Fill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Fill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Fill)
    MergeFrom(*source);
  }
}

void Fill::MergeFrom(const Fill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Fill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.op_case()) {
    case kConstant: {
      mutable_constant()->::es_proto::Constant::MergeFrom(from.constant());
      break;
    }
    case kLowertri: {
      mutable_lowertri()->::es_proto::Lowertri::MergeFrom(from.lowertri());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
}

void Fill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Fill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fill::CopyFrom(const Fill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Fill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fill::IsInitialized() const {
  switch (op_case()) {
    case kConstant: {
      if (has_constant()) {
        if (!this->constant().IsInitialized()) return false;
      }
      break;
    }
    case kLowertri: {
      if (has_lowertri()) {
        if (!this->lowertri().IsInitialized()) return false;
      }
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  return true;
}

void Fill::Swap(Fill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fill::InternalSwap(Fill* other) {
  using std::swap;
  swap(op_, other->op_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Fill::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGInput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGInput::kLocFieldNumber;
const int TGInput::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGInput::TGInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGInput.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGInput)
}
TGInput::TGInput(const TGInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&size_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.TGInput)
}

void TGInput::SharedCtor() {
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&size_)) + sizeof(loc_));
}

TGInput::~TGInput() {
  // @@protoc_insertion_point(destructor:es_proto.TGInput)
  SharedDtor();
}

void TGInput::SharedDtor() {
}

void TGInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGInput::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGInput& TGInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGInput.base);
  return *internal_default_instance();
}


void TGInput::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&size_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGInput)
  return false;
#undef DO_
}

void TGInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGInput)
}

::google::protobuf::uint8* TGInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGInput)
  return target;
}

size_t TGInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGInput)
  size_t total_size = 0;

  if (has_size()) {
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t TGInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGInput)
  GOOGLE_DCHECK_NE(&from, this);
  const TGInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGInput)
    MergeFrom(*source);
  }
}

void TGInput::MergeFrom(const TGInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000002u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGInput::CopyFrom(const TGInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TGInput::Swap(TGInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGInput::InternalSwap(TGInput* other) {
  using std::swap;
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGInput::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGApply::InitAsDefaultInstance() {
  ::es_proto::_TGApply_default_instance_._instance.get_mutable()->einsummable_ = const_cast< ::es_proto::Einsummable*>(
      ::es_proto::Einsummable::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGApply::kLocFieldNumber;
const int TGApply::kInnsFieldNumber;
const int TGApply::kEinsummableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGApply::TGApply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGApply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGApply)
}
TGApply::TGApply(const TGApply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inns_(from.inns_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_einsummable()) {
    einsummable_ = new ::es_proto::Einsummable(*from.einsummable_);
  } else {
    einsummable_ = NULL;
  }
  loc_ = from.loc_;
  // @@protoc_insertion_point(copy_constructor:es_proto.TGApply)
}

void TGApply::SharedCtor() {
  ::memset(&einsummable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&einsummable_)) + sizeof(loc_));
}

TGApply::~TGApply() {
  // @@protoc_insertion_point(destructor:es_proto.TGApply)
  SharedDtor();
}

void TGApply::SharedDtor() {
  if (this != internal_default_instance()) delete einsummable_;
}

void TGApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGApply::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGApply& TGApply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGApply.base);
  return *internal_default_instance();
}


void TGApply::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inns_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(einsummable_ != NULL);
    einsummable_->Clear();
  }
  loc_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGApply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGApply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 inns = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_inns())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inns())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Einsummable einsummable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_einsummable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGApply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGApply)
  return false;
#undef DO_
}

void TGApply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // repeated int32 inns = 2;
  for (int i = 0, n = this->inns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->inns(i), output);
  }

  // required .es_proto.Einsummable einsummable = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_einsummable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGApply)
}

::google::protobuf::uint8* TGApply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // repeated int32 inns = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->inns_, target);

  // required .es_proto.Einsummable einsummable = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_einsummable(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGApply)
  return target;
}

size_t TGApply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGApply)
  size_t total_size = 0;

  if (has_einsummable()) {
    // required .es_proto.Einsummable einsummable = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *einsummable_);
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t TGApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGApply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .es_proto.Einsummable einsummable = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *einsummable_);

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 inns = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->inns_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->inns_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGApply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGApply)
  GOOGLE_DCHECK_NE(&from, this);
  const TGApply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGApply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGApply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGApply)
    MergeFrom(*source);
  }
}

void TGApply::MergeFrom(const TGApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGApply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inns_.MergeFrom(from.inns_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_einsummable()->::es_proto::Einsummable::MergeFrom(from.einsummable());
    }
    if (cached_has_bits & 0x00000002u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGApply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGApply::CopyFrom(const TGApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGApply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_einsummable()) {
    if (!this->einsummable_->IsInitialized()) return false;
  }
  return true;
}

void TGApply::Swap(TGApply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGApply::InternalSwap(TGApply* other) {
  using std::swap;
  inns_.InternalSwap(&other->inns_);
  swap(einsummable_, other->einsummable_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGApply::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGMove::kSrcFieldNumber;
const int TGMove::kDstFieldNumber;
const int TGMove::kInnFieldNumber;
const int TGMove::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGMove::TGMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGMove)
}
TGMove::TGMove(const TGMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&src_, &from.src_,
    static_cast<size_t>(reinterpret_cast<char*>(&inn_) -
    reinterpret_cast<char*>(&src_)) + sizeof(inn_));
  // @@protoc_insertion_point(copy_constructor:es_proto.TGMove)
}

void TGMove::SharedCtor() {
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inn_) -
      reinterpret_cast<char*>(&src_)) + sizeof(inn_));
}

TGMove::~TGMove() {
  // @@protoc_insertion_point(destructor:es_proto.TGMove)
  SharedDtor();
}

void TGMove::SharedDtor() {
}

void TGMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGMove::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGMove& TGMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGMove.base);
  return *internal_default_instance();
}


void TGMove::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&src_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inn_) -
        reinterpret_cast<char*>(&src_)) + sizeof(inn_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_src();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dst = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 inn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_inn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGMove)
  return false;
#undef DO_
}

void TGMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->src(), output);
  }

  // required int32 dst = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dst(), output);
  }

  // required int32 inn = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->inn(), output);
  }

  // required uint64 size = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGMove)
}

::google::protobuf::uint8* TGMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->src(), target);
  }

  // required int32 dst = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dst(), target);
  }

  // required int32 inn = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->inn(), target);
  }

  // required uint64 size = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGMove)
  return target;
}

size_t TGMove::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGMove)
  size_t total_size = 0;

  if (has_src()) {
    // required int32 src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src());
  }

  if (has_dst()) {
    // required int32 dst = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst());
  }

  if (has_size()) {
    // required uint64 size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_inn()) {
    // required int32 inn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inn());
  }

  return total_size;
}
size_t TGMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src());

    // required int32 dst = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst());

    // required uint64 size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 inn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inn());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGMove)
  GOOGLE_DCHECK_NE(&from, this);
  const TGMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGMove)
    MergeFrom(*source);
  }
}

void TGMove::MergeFrom(const TGMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      src_ = from.src_;
    }
    if (cached_has_bits & 0x00000002u) {
      dst_ = from.dst_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000008u) {
      inn_ = from.inn_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGMove::CopyFrom(const TGMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void TGMove::Swap(TGMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGMove::InternalSwap(TGMove* other) {
  using std::swap;
  swap(src_, other->src_);
  swap(dst_, other->dst_);
  swap(size_, other->size_);
  swap(inn_, other->inn_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGMove::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGConstant::InitAsDefaultInstance() {
  ::es_proto::_TGConstant_default_instance_._instance.get_mutable()->fill_ = const_cast< ::es_proto::Fill*>(
      ::es_proto::Fill::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGConstant::kLocFieldNumber;
const int TGConstant::kFillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGConstant::TGConstant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGConstant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGConstant)
}
TGConstant::TGConstant(const TGConstant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fill()) {
    fill_ = new ::es_proto::Fill(*from.fill_);
  } else {
    fill_ = NULL;
  }
  loc_ = from.loc_;
  // @@protoc_insertion_point(copy_constructor:es_proto.TGConstant)
}

void TGConstant::SharedCtor() {
  ::memset(&fill_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&fill_)) + sizeof(loc_));
}

TGConstant::~TGConstant() {
  // @@protoc_insertion_point(destructor:es_proto.TGConstant)
  SharedDtor();
}

void TGConstant::SharedDtor() {
  if (this != internal_default_instance()) delete fill_;
}

void TGConstant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGConstant::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGConstant& TGConstant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGConstant.base);
  return *internal_default_instance();
}


void TGConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fill_ != NULL);
    fill_->Clear();
  }
  loc_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGConstant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Fill fill = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGConstant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGConstant)
  return false;
#undef DO_
}

void TGConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required .es_proto.Fill fill = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fill(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGConstant)
}

::google::protobuf::uint8* TGConstant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required .es_proto.Fill fill = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fill(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGConstant)
  return target;
}

size_t TGConstant::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGConstant)
  size_t total_size = 0;

  if (has_fill()) {
    // required .es_proto.Fill fill = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fill_);
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t TGConstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGConstant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .es_proto.Fill fill = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fill_);

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGConstant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGConstant)
  GOOGLE_DCHECK_NE(&from, this);
  const TGConstant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGConstant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGConstant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGConstant)
    MergeFrom(*source);
  }
}

void TGConstant::MergeFrom(const TGConstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGConstant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fill()->::es_proto::Fill::MergeFrom(from.fill());
    }
    if (cached_has_bits & 0x00000002u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGConstant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGConstant::CopyFrom(const TGConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGConstant::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_fill()) {
    if (!this->fill_->IsInitialized()) return false;
  }
  return true;
}

void TGConstant::Swap(TGConstant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGConstant::InternalSwap(TGConstant* other) {
  using std::swap;
  swap(fill_, other->fill_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGConstant::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InnRegionDim::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnRegionDim::kDimFieldNumber;
const int InnRegionDim::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnRegionDim::InnRegionDim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_InnRegionDim.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.InnRegionDim)
}
InnRegionDim::InnRegionDim(const InnRegionDim& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dim_, &from.dim_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&dim_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:es_proto.InnRegionDim)
}

void InnRegionDim::SharedCtor() {
  ::memset(&dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&dim_)) + sizeof(offset_));
}

InnRegionDim::~InnRegionDim() {
  // @@protoc_insertion_point(destructor:es_proto.InnRegionDim)
  SharedDtor();
}

void InnRegionDim::SharedDtor() {
}

void InnRegionDim::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InnRegionDim::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InnRegionDim& InnRegionDim::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_InnRegionDim.base);
  return *internal_default_instance();
}


void InnRegionDim::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.InnRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&dim_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&dim_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InnRegionDim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.InnRegionDim)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 dim = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dim();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.InnRegionDim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.InnRegionDim)
  return false;
#undef DO_
}

void InnRegionDim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.InnRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 dim = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dim(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.InnRegionDim)
}

::google::protobuf::uint8* InnRegionDim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.InnRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 dim = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dim(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.InnRegionDim)
  return target;
}

size_t InnRegionDim::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.InnRegionDim)
  size_t total_size = 0;

  if (has_dim()) {
    // required uint64 dim = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dim());
  }

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  return total_size;
}
size_t InnRegionDim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.InnRegionDim)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 dim = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dim());

    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InnRegionDim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.InnRegionDim)
  GOOGLE_DCHECK_NE(&from, this);
  const InnRegionDim* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnRegionDim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.InnRegionDim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.InnRegionDim)
    MergeFrom(*source);
  }
}

void InnRegionDim::MergeFrom(const InnRegionDim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.InnRegionDim)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dim_ = from.dim_;
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InnRegionDim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.InnRegionDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnRegionDim::CopyFrom(const InnRegionDim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.InnRegionDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnRegionDim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void InnRegionDim::Swap(InnRegionDim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnRegionDim::InternalSwap(InnRegionDim* other) {
  using std::swap;
  swap(dim_, other->dim_);
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InnRegionDim::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutRegionDim::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutRegionDim::kOffsetFieldNumber;
const int OutRegionDim::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutRegionDim::OutRegionDim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_OutRegionDim.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.OutRegionDim)
}
OutRegionDim::OutRegionDim(const OutRegionDim& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:es_proto.OutRegionDim)
}

void OutRegionDim::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
}

OutRegionDim::~OutRegionDim() {
  // @@protoc_insertion_point(destructor:es_proto.OutRegionDim)
  SharedDtor();
}

void OutRegionDim::SharedDtor() {
}

void OutRegionDim::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OutRegionDim::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutRegionDim& OutRegionDim::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_OutRegionDim.base);
  return *internal_default_instance();
}


void OutRegionDim::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.OutRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OutRegionDim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.OutRegionDim)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.OutRegionDim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.OutRegionDim)
  return false;
#undef DO_
}

void OutRegionDim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.OutRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.OutRegionDim)
}

::google::protobuf::uint8* OutRegionDim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.OutRegionDim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.OutRegionDim)
  return target;
}

size_t OutRegionDim::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.OutRegionDim)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t OutRegionDim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.OutRegionDim)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutRegionDim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.OutRegionDim)
  GOOGLE_DCHECK_NE(&from, this);
  const OutRegionDim* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutRegionDim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.OutRegionDim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.OutRegionDim)
    MergeFrom(*source);
  }
}

void OutRegionDim::MergeFrom(const OutRegionDim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.OutRegionDim)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OutRegionDim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.OutRegionDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutRegionDim::CopyFrom(const OutRegionDim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.OutRegionDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutRegionDim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OutRegionDim::Swap(OutRegionDim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutRegionDim::InternalSwap(OutRegionDim* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OutRegionDim::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGPartialInn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGPartialInn::kIdFieldNumber;
const int TGPartialInn::kConsumableFieldNumber;
const int TGPartialInn::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGPartialInn::TGPartialInn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGPartialInn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGPartialInn)
}
TGPartialInn::TGPartialInn(const TGPartialInn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      region_(from.region_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&consumable_) -
    reinterpret_cast<char*>(&id_)) + sizeof(consumable_));
  // @@protoc_insertion_point(copy_constructor:es_proto.TGPartialInn)
}

void TGPartialInn::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consumable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(consumable_));
}

TGPartialInn::~TGPartialInn() {
  // @@protoc_insertion_point(destructor:es_proto.TGPartialInn)
  SharedDtor();
}

void TGPartialInn::SharedDtor() {
}

void TGPartialInn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGPartialInn::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGPartialInn& TGPartialInn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGPartialInn.base);
  return *internal_default_instance();
}


void TGPartialInn::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGPartialInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&consumable_) -
        reinterpret_cast<char*>(&id_)) + sizeof(consumable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGPartialInn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGPartialInn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool consumable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_consumable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &consumable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.InnRegionDim region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGPartialInn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGPartialInn)
  return false;
#undef DO_
}

void TGPartialInn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGPartialInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bool consumable = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->consumable(), output);
  }

  // repeated .es_proto.InnRegionDim region = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->region(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGPartialInn)
}

::google::protobuf::uint8* TGPartialInn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGPartialInn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bool consumable = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->consumable(), target);
  }

  // repeated .es_proto.InnRegionDim region = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->region(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGPartialInn)
  return target;
}

size_t TGPartialInn::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGPartialInn)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_consumable()) {
    // required bool consumable = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t TGPartialInn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGPartialInn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required bool consumable = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .es_proto.InnRegionDim region = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->region_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->region(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGPartialInn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGPartialInn)
  GOOGLE_DCHECK_NE(&from, this);
  const TGPartialInn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGPartialInn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGPartialInn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGPartialInn)
    MergeFrom(*source);
  }
}

void TGPartialInn::MergeFrom(const TGPartialInn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGPartialInn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  region_.MergeFrom(from.region_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      consumable_ = from.consumable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGPartialInn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGPartialInn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGPartialInn::CopyFrom(const TGPartialInn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGPartialInn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGPartialInn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->region())) return false;
  return true;
}

void TGPartialInn::Swap(TGPartialInn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGPartialInn::InternalSwap(TGPartialInn* other) {
  using std::swap;
  CastToBase(&region_)->InternalSwap(CastToBase(&other->region_));
  swap(id_, other->id_);
  swap(consumable_, other->consumable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGPartialInn::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGPartialUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGPartialUnit::kCastableFieldNumber;
const int TGPartialUnit::kOutRegionFieldNumber;
const int TGPartialUnit::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGPartialUnit::TGPartialUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGPartialUnit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGPartialUnit)
}
TGPartialUnit::TGPartialUnit(const TGPartialUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      out_region_(from.out_region_),
      inputs_(from.inputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_castable()) {
    castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.TGPartialUnit)
}

void TGPartialUnit::SharedCtor() {
  castable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TGPartialUnit::~TGPartialUnit() {
  // @@protoc_insertion_point(destructor:es_proto.TGPartialUnit)
  SharedDtor();
}

void TGPartialUnit::SharedDtor() {
  castable_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TGPartialUnit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGPartialUnit::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGPartialUnit& TGPartialUnit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGPartialUnit.base);
  return *internal_default_instance();
}


void TGPartialUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGPartialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  out_region_.Clear();
  inputs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    castable_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGPartialUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGPartialUnit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string castable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castable()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->castable().data(), static_cast<int>(this->castable().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.TGPartialUnit.castable");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.OutRegionDim out_region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_out_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.TGPartialInn inputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGPartialUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGPartialUnit)
  return false;
#undef DO_
}

void TGPartialUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGPartialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string castable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.TGPartialUnit.castable");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->castable(), output);
  }

  // repeated .es_proto.OutRegionDim out_region = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_region_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->out_region(static_cast<int>(i)),
      output);
  }

  // repeated .es_proto.TGPartialInn inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->inputs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGPartialUnit)
}

::google::protobuf::uint8* TGPartialUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGPartialUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string castable = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->castable().data(), static_cast<int>(this->castable().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.TGPartialUnit.castable");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->castable(), target);
  }

  // repeated .es_proto.OutRegionDim out_region = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_region_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->out_region(static_cast<int>(i)), deterministic, target);
  }

  // repeated .es_proto.TGPartialInn inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGPartialUnit)
  return target;
}

size_t TGPartialUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGPartialUnit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.OutRegionDim out_region = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->out_region_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->out_region(static_cast<int>(i)));
    }
  }

  // repeated .es_proto.TGPartialInn inputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // optional string castable = 1;
  if (has_castable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->castable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGPartialUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGPartialUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const TGPartialUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGPartialUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGPartialUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGPartialUnit)
    MergeFrom(*source);
  }
}

void TGPartialUnit::MergeFrom(const TGPartialUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGPartialUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  out_region_.MergeFrom(from.out_region_);
  inputs_.MergeFrom(from.inputs_);
  if (from.has_castable()) {
    set_has_castable();
    castable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.castable_);
  }
}

void TGPartialUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGPartialUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGPartialUnit::CopyFrom(const TGPartialUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGPartialUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGPartialUnit::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->out_region())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  return true;
}

void TGPartialUnit::Swap(TGPartialUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGPartialUnit::InternalSwap(TGPartialUnit* other) {
  using std::swap;
  CastToBase(&out_region_)->InternalSwap(CastToBase(&other->out_region_));
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  castable_.Swap(&other->castable_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGPartialUnit::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TGPartialize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TGPartialize::kLocFieldNumber;
const int TGPartialize::kDtypeFieldNumber;
const int TGPartialize::kWriteShapeFieldNumber;
const int TGPartialize::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TGPartialize::TGPartialize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TGPartialize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TGPartialize)
}
TGPartialize::TGPartialize(const TGPartialize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      write_shape_(from.write_shape_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dtype()) {
    dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  loc_ = from.loc_;
  // @@protoc_insertion_point(copy_constructor:es_proto.TGPartialize)
}

void TGPartialize::SharedCtor() {
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loc_ = 0;
}

TGPartialize::~TGPartialize() {
  // @@protoc_insertion_point(destructor:es_proto.TGPartialize)
  SharedDtor();
}

void TGPartialize::SharedDtor() {
  dtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TGPartialize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TGPartialize::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TGPartialize& TGPartialize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TGPartialize.base);
  return *internal_default_instance();
}


void TGPartialize::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  write_shape_.Clear();
  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dtype_.ClearNonDefaultToEmptyNoArena();
  }
  loc_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TGPartialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TGPartialize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dtype().data(), static_cast<int>(this->dtype().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.TGPartialize.dtype");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 write_shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_write_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_write_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.TGPartialUnit units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TGPartialize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TGPartialize)
  return false;
#undef DO_
}

void TGPartialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required string dtype = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.TGPartialize.dtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dtype(), output);
  }

  // repeated uint64 write_shape = 3;
  for (int i = 0, n = this->write_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->write_shape(i), output);
  }

  // repeated .es_proto.TGPartialUnit units = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->units_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->units(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TGPartialize)
}

::google::protobuf::uint8* TGPartialize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required string dtype = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.TGPartialize.dtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dtype(), target);
  }

  // repeated uint64 write_shape = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->write_shape_, target);

  // repeated .es_proto.TGPartialUnit units = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->units_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->units(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TGPartialize)
  return target;
}

size_t TGPartialize::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.TGPartialize)
  size_t total_size = 0;

  if (has_dtype()) {
    // required string dtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dtype());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t TGPartialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TGPartialize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string dtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dtype());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 write_shape = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->write_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->write_shape_size());
    total_size += data_size;
  }

  // repeated .es_proto.TGPartialUnit units = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->units_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->units(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TGPartialize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TGPartialize)
  GOOGLE_DCHECK_NE(&from, this);
  const TGPartialize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TGPartialize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TGPartialize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TGPartialize)
    MergeFrom(*source);
  }
}

void TGPartialize::MergeFrom(const TGPartialize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TGPartialize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  write_shape_.MergeFrom(from.write_shape_);
  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dtype();
      dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
    }
    if (cached_has_bits & 0x00000002u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TGPartialize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TGPartialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGPartialize::CopyFrom(const TGPartialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TGPartialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGPartialize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->units())) return false;
  return true;
}

void TGPartialize::Swap(TGPartialize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TGPartialize::InternalSwap(TGPartialize* other) {
  using std::swap;
  write_shape_.InternalSwap(&other->write_shape_);
  CastToBase(&units_)->InternalSwap(CastToBase(&other->units_));
  dtype_.Swap(&other->dtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TGPartialize::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskGraphNode::InitAsDefaultInstance() {
  ::es_proto::_TaskGraphNode_default_instance_.input_ = const_cast< ::es_proto::TGInput*>(
      ::es_proto::TGInput::internal_default_instance());
  ::es_proto::_TaskGraphNode_default_instance_.apply_ = const_cast< ::es_proto::TGApply*>(
      ::es_proto::TGApply::internal_default_instance());
  ::es_proto::_TaskGraphNode_default_instance_.move_ = const_cast< ::es_proto::TGMove*>(
      ::es_proto::TGMove::internal_default_instance());
  ::es_proto::_TaskGraphNode_default_instance_.constant_ = const_cast< ::es_proto::TGConstant*>(
      ::es_proto::TGConstant::internal_default_instance());
  ::es_proto::_TaskGraphNode_default_instance_.partialize_ = const_cast< ::es_proto::TGPartialize*>(
      ::es_proto::TGPartialize::internal_default_instance());
}
void TaskGraphNode::set_allocated_input(::es_proto::TGInput* input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (input) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    set_has_input();
    node_.input_ = input;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.TaskGraphNode.input)
}
void TaskGraphNode::set_allocated_apply(::es_proto::TGApply* apply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (apply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      apply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, apply, submessage_arena);
    }
    set_has_apply();
    node_.apply_ = apply;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.TaskGraphNode.apply)
}
void TaskGraphNode::set_allocated_move(::es_proto::TGMove* move) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (move) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    set_has_move();
    node_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.TaskGraphNode.move)
}
void TaskGraphNode::set_allocated_constant(::es_proto::TGConstant* constant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (constant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      constant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    node_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.TaskGraphNode.constant)
}
void TaskGraphNode::set_allocated_partialize(::es_proto::TGPartialize* partialize) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (partialize) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      partialize = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, partialize, submessage_arena);
    }
    set_has_partialize();
    node_.partialize_ = partialize;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.TaskGraphNode.partialize)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskGraphNode::kInputFieldNumber;
const int TaskGraphNode::kApplyFieldNumber;
const int TaskGraphNode::kMoveFieldNumber;
const int TaskGraphNode::kConstantFieldNumber;
const int TaskGraphNode::kPartializeFieldNumber;
const int TaskGraphNode::kIsSaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskGraphNode::TaskGraphNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TaskGraphNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TaskGraphNode)
}
TaskGraphNode::TaskGraphNode(const TaskGraphNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_save_ = from.is_save_;
  clear_has_node();
  switch (from.node_case()) {
    case kInput: {
      mutable_input()->::es_proto::TGInput::MergeFrom(from.input());
      break;
    }
    case kApply: {
      mutable_apply()->::es_proto::TGApply::MergeFrom(from.apply());
      break;
    }
    case kMove: {
      mutable_move()->::es_proto::TGMove::MergeFrom(from.move());
      break;
    }
    case kConstant: {
      mutable_constant()->::es_proto::TGConstant::MergeFrom(from.constant());
      break;
    }
    case kPartialize: {
      mutable_partialize()->::es_proto::TGPartialize::MergeFrom(from.partialize());
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.TaskGraphNode)
}

void TaskGraphNode::SharedCtor() {
  is_save_ = false;
  clear_has_node();
}

TaskGraphNode::~TaskGraphNode() {
  // @@protoc_insertion_point(destructor:es_proto.TaskGraphNode)
  SharedDtor();
}

void TaskGraphNode::SharedDtor() {
  if (has_node()) {
    clear_node();
  }
}

void TaskGraphNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskGraphNode::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskGraphNode& TaskGraphNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TaskGraphNode.base);
  return *internal_default_instance();
}


void TaskGraphNode::clear_node() {
// @@protoc_insertion_point(one_of_clear_start:es_proto.TaskGraphNode)
  switch (node_case()) {
    case kInput: {
      delete node_.input_;
      break;
    }
    case kApply: {
      delete node_.apply_;
      break;
    }
    case kMove: {
      delete node_.move_;
      break;
    }
    case kConstant: {
      delete node_.constant_;
      break;
    }
    case kPartialize: {
      delete node_.partialize_;
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NODE_NOT_SET;
}


void TaskGraphNode::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TaskGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_save_ = false;
  clear_node();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskGraphNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TaskGraphNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .es_proto.TGInput input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.TGApply apply = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.TGMove move = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.TGConstant constant = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.TGPartialize partialize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partialize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_save = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_save();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_save_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TaskGraphNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TaskGraphNode)
  return false;
#undef DO_
}

void TaskGraphNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TaskGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (node_case()) {
    case kInput:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_input(), output);
      break;
    case kApply:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_apply(), output);
      break;
    case kMove:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_move(), output);
      break;
    case kConstant:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_constant(), output);
      break;
    case kPartialize:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_partialize(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // required bool is_save = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_save(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TaskGraphNode)
}

::google::protobuf::uint8* TaskGraphNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TaskGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (node_case()) {
    case kInput:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_input(), deterministic, target);
      break;
    case kApply:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_apply(), deterministic, target);
      break;
    case kMove:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_move(), deterministic, target);
      break;
    case kConstant:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_constant(), deterministic, target);
      break;
    case kPartialize:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_partialize(), deterministic, target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // required bool is_save = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_save(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TaskGraphNode)
  return target;
}

size_t TaskGraphNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TaskGraphNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool is_save = 6;
  if (has_is_save()) {
    total_size += 1 + 1;
  }
  switch (node_case()) {
    // optional .es_proto.TGInput input = 1;
    case kInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.input_);
      break;
    }
    // optional .es_proto.TGApply apply = 2;
    case kApply: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.apply_);
      break;
    }
    // optional .es_proto.TGMove move = 3;
    case kMove: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.move_);
      break;
    }
    // optional .es_proto.TGConstant constant = 4;
    case kConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.constant_);
      break;
    }
    // optional .es_proto.TGPartialize partialize = 5;
    case kPartialize: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.partialize_);
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskGraphNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TaskGraphNode)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskGraphNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskGraphNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TaskGraphNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TaskGraphNode)
    MergeFrom(*source);
  }
}

void TaskGraphNode::MergeFrom(const TaskGraphNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TaskGraphNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_is_save()) {
    set_is_save(from.is_save());
  }
  switch (from.node_case()) {
    case kInput: {
      mutable_input()->::es_proto::TGInput::MergeFrom(from.input());
      break;
    }
    case kApply: {
      mutable_apply()->::es_proto::TGApply::MergeFrom(from.apply());
      break;
    }
    case kMove: {
      mutable_move()->::es_proto::TGMove::MergeFrom(from.move());
      break;
    }
    case kConstant: {
      mutable_constant()->::es_proto::TGConstant::MergeFrom(from.constant());
      break;
    }
    case kPartialize: {
      mutable_partialize()->::es_proto::TGPartialize::MergeFrom(from.partialize());
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
}

void TaskGraphNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TaskGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskGraphNode::CopyFrom(const TaskGraphNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TaskGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskGraphNode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (node_case()) {
    case kInput: {
      if (has_input()) {
        if (!this->input().IsInitialized()) return false;
      }
      break;
    }
    case kApply: {
      if (has_apply()) {
        if (!this->apply().IsInitialized()) return false;
      }
      break;
    }
    case kMove: {
      if (has_move()) {
        if (!this->move().IsInitialized()) return false;
      }
      break;
    }
    case kConstant: {
      if (has_constant()) {
        if (!this->constant().IsInitialized()) return false;
      }
      break;
    }
    case kPartialize: {
      if (has_partialize()) {
        if (!this->partialize().IsInitialized()) return false;
      }
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  return true;
}

void TaskGraphNode::Swap(TaskGraphNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskGraphNode::InternalSwap(TaskGraphNode* other) {
  using std::swap;
  swap(is_save_, other->is_save_);
  swap(node_, other->node_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskGraphNode::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskGraph::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskGraph::TaskGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_TaskGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.TaskGraph)
}
TaskGraph::TaskGraph(const TaskGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.TaskGraph)
}

void TaskGraph::SharedCtor() {
}

TaskGraph::~TaskGraph() {
  // @@protoc_insertion_point(destructor:es_proto.TaskGraph)
  SharedDtor();
}

void TaskGraph::SharedDtor() {
}

void TaskGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskGraph::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskGraph& TaskGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_TaskGraph.base);
  return *internal_default_instance();
}


void TaskGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.TaskGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.TaskGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.TaskGraphNode nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.TaskGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.TaskGraph)
  return false;
#undef DO_
}

void TaskGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.TaskGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.TaskGraphNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.TaskGraph)
}

::google::protobuf::uint8* TaskGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.TaskGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.TaskGraphNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.TaskGraph)
  return target;
}

size_t TaskGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.TaskGraph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.TaskGraphNode nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.TaskGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.TaskGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.TaskGraph)
    MergeFrom(*source);
  }
}

void TaskGraph::MergeFrom(const TaskGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.TaskGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void TaskGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.TaskGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskGraph::CopyFrom(const TaskGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.TaskGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskGraph::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  return true;
}

void TaskGraph::Swap(TaskGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskGraph::InternalSwap(TaskGraph* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskGraph::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Partdim::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partdim::kSpansFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partdim::Partdim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Partdim.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Partdim)
}
Partdim::Partdim(const Partdim& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      spans_(from.spans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.Partdim)
}

void Partdim::SharedCtor() {
}

Partdim::~Partdim() {
  // @@protoc_insertion_point(destructor:es_proto.Partdim)
  SharedDtor();
}

void Partdim::SharedDtor() {
}

void Partdim::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Partdim::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partdim& Partdim::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Partdim.base);
  return *internal_default_instance();
}


void Partdim::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Partdim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spans_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Partdim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Partdim)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 spans = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_spans())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_spans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Partdim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Partdim)
  return false;
#undef DO_
}

void Partdim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Partdim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 spans = 1;
  for (int i = 0, n = this->spans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->spans(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Partdim)
}

::google::protobuf::uint8* Partdim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Partdim)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 spans = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->spans_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Partdim)
  return target;
}

size_t Partdim::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Partdim)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 spans = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->spans_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->spans_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Partdim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Partdim)
  GOOGLE_DCHECK_NE(&from, this);
  const Partdim* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partdim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Partdim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Partdim)
    MergeFrom(*source);
  }
}

void Partdim::MergeFrom(const Partdim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Partdim)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spans_.MergeFrom(from.spans_);
}

void Partdim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Partdim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partdim::CopyFrom(const Partdim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Partdim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partdim::IsInitialized() const {
  return true;
}

void Partdim::Swap(Partdim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partdim::InternalSwap(Partdim* other) {
  using std::swap;
  spans_.InternalSwap(&other->spans_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Partdim::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Partition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partition::kPartdimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partition::Partition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Partition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Partition)
}
Partition::Partition(const Partition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      partdims_(from.partdims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.Partition)
}

void Partition::SharedCtor() {
}

Partition::~Partition() {
  // @@protoc_insertion_point(destructor:es_proto.Partition)
  SharedDtor();
}

void Partition::SharedDtor() {
}

void Partition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Partition::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partition& Partition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Partition.base);
  return *internal_default_instance();
}


void Partition::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Partition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partdims_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Partition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Partition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.Partdim partdims = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_partdims()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Partition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Partition)
  return false;
#undef DO_
}

void Partition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Partition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Partdim partdims = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partdims_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->partdims(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Partition)
}

::google::protobuf::uint8* Partition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Partition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Partdim partdims = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partdims_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->partdims(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Partition)
  return target;
}

size_t Partition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Partition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.Partdim partdims = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->partdims_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partdims(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Partition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Partition)
  GOOGLE_DCHECK_NE(&from, this);
  const Partition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Partition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Partition)
    MergeFrom(*source);
  }
}

void Partition::MergeFrom(const Partition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Partition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partdims_.MergeFrom(from.partdims_);
}

void Partition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Partition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partition::CopyFrom(const Partition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Partition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partition::IsInitialized() const {
  return true;
}

void Partition::Swap(Partition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partition::InternalSwap(Partition* other) {
  using std::swap;
  CastToBase(&partdims_)->InternalSwap(CastToBase(&other->partdims_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Partition::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Placement::InitAsDefaultInstance() {
  ::es_proto::_Placement_default_instance_._instance.get_mutable()->partition_ = const_cast< ::es_proto::Partition*>(
      ::es_proto::Partition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Placement::kPartitionFieldNumber;
const int Placement::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Placement::Placement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Placement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Placement)
}
Placement::Placement(const Placement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_partition()) {
    partition_ = new ::es_proto::Partition(*from.partition_);
  } else {
    partition_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.Placement)
}

void Placement::SharedCtor() {
  partition_ = NULL;
}

Placement::~Placement() {
  // @@protoc_insertion_point(destructor:es_proto.Placement)
  SharedDtor();
}

void Placement::SharedDtor() {
  if (this != internal_default_instance()) delete partition_;
}

void Placement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Placement::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Placement& Placement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Placement.base);
  return *internal_default_instance();
}


void Placement::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Placement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(partition_ != NULL);
    partition_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Placement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Placement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .es_proto.Partition partition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 locations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_locations())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_locations())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Placement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Placement)
  return false;
#undef DO_
}

void Placement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Placement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .es_proto.Partition partition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_partition(), output);
  }

  // repeated int32 locations = 2;
  for (int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->locations(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Placement)
}

::google::protobuf::uint8* Placement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Placement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .es_proto.Partition partition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_partition(), deterministic, target);
  }

  // repeated int32 locations = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->locations_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Placement)
  return target;
}

size_t Placement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Placement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .es_proto.Partition partition = 1;
  if (has_partition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *partition_);
  }
  // repeated int32 locations = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->locations_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->locations_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Placement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Placement)
  GOOGLE_DCHECK_NE(&from, this);
  const Placement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Placement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Placement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Placement)
    MergeFrom(*source);
  }
}

void Placement::MergeFrom(const Placement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Placement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.has_partition()) {
    mutable_partition()->::es_proto::Partition::MergeFrom(from.partition());
  }
}

void Placement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Placement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Placement::CopyFrom(const Placement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Placement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Placement::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Placement::Swap(Placement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Placement::InternalSwap(Placement* other) {
  using std::swap;
  locations_.InternalSwap(&other->locations_);
  swap(partition_, other->partition_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Placement::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Relation::InitAsDefaultInstance() {
  ::es_proto::_Relation_default_instance_._instance.get_mutable()->placement_ = const_cast< ::es_proto::Placement*>(
      ::es_proto::Placement::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Relation::kDtypeFieldNumber;
const int Relation::kPlacementFieldNumber;
const int Relation::kTidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relation::Relation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Relation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Relation)
}
Relation::Relation(const Relation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tids_(from.tids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dtype()) {
    dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  if (from.has_placement()) {
    placement_ = new ::es_proto::Placement(*from.placement_);
  } else {
    placement_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.Relation)
}

void Relation::SharedCtor() {
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  placement_ = NULL;
}

Relation::~Relation() {
  // @@protoc_insertion_point(destructor:es_proto.Relation)
  SharedDtor();
}

void Relation::SharedDtor() {
  dtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete placement_;
}

void Relation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Relation::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Relation& Relation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Relation.base);
  return *internal_default_instance();
}


void Relation::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dtype_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(placement_ != NULL);
      placement_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Relation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Relation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dtype().data(), static_cast<int>(this->dtype().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.Relation.dtype");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Placement placement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_placement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 tids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_tids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Relation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Relation)
  return false;
#undef DO_
}

void Relation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dtype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Relation.dtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dtype(), output);
  }

  // required .es_proto.Placement placement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_placement(), output);
  }

  // repeated int32 tids = 4;
  for (int i = 0, n = this->tids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->tids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Relation)
}

::google::protobuf::uint8* Relation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Relation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dtype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), static_cast<int>(this->dtype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.Relation.dtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dtype(), target);
  }

  // required .es_proto.Placement placement = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_placement(), deterministic, target);
  }

  // repeated int32 tids = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->tids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Relation)
  return target;
}

size_t Relation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.Relation)
  size_t total_size = 0;

  if (has_dtype()) {
    // required string dtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dtype());
  }

  if (has_placement()) {
    // required .es_proto.Placement placement = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *placement_);
  }

  return total_size;
}
size_t Relation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Relation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string dtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dtype());

    // required .es_proto.Placement placement = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *placement_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 tids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->tids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Relation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  const Relation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Relation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Relation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Relation)
    MergeFrom(*source);
  }
}

void Relation::MergeFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Relation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tids_.MergeFrom(from.tids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dtype();
      dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_placement()->::es_proto::Placement::MergeFrom(from.placement());
    }
  }
}

void Relation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relation::CopyFrom(const Relation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_placement()) {
    if (!this->placement_->IsInitialized()) return false;
  }
  return true;
}

void Relation::Swap(Relation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relation::InternalSwap(Relation* other) {
  using std::swap;
  tids_.InternalSwap(&other->tids_);
  dtype_.Swap(&other->dtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(placement_, other->placement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Relation::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemapRelations::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemapRelations::kSrcsFieldNumber;
const int RemapRelations::kDstsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemapRelations::RemapRelations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_RemapRelations.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.RemapRelations)
}
RemapRelations::RemapRelations(const RemapRelations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      srcs_(from.srcs_),
      dsts_(from.dsts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.RemapRelations)
}

void RemapRelations::SharedCtor() {
}

RemapRelations::~RemapRelations() {
  // @@protoc_insertion_point(destructor:es_proto.RemapRelations)
  SharedDtor();
}

void RemapRelations::SharedDtor() {
}

void RemapRelations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemapRelations::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemapRelations& RemapRelations::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_RemapRelations.base);
  return *internal_default_instance();
}


void RemapRelations::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.RemapRelations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcs_.Clear();
  dsts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemapRelations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.RemapRelations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.Relation srcs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_srcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.Relation dsts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dsts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.RemapRelations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.RemapRelations)
  return false;
#undef DO_
}

void RemapRelations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.RemapRelations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Relation srcs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->srcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->srcs(static_cast<int>(i)),
      output);
  }

  // repeated .es_proto.Relation dsts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dsts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->dsts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.RemapRelations)
}

::google::protobuf::uint8* RemapRelations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.RemapRelations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.Relation srcs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->srcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->srcs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .es_proto.Relation dsts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dsts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->dsts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.RemapRelations)
  return target;
}

size_t RemapRelations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.RemapRelations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.Relation srcs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->srcs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->srcs(static_cast<int>(i)));
    }
  }

  // repeated .es_proto.Relation dsts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dsts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dsts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemapRelations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.RemapRelations)
  GOOGLE_DCHECK_NE(&from, this);
  const RemapRelations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemapRelations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.RemapRelations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.RemapRelations)
    MergeFrom(*source);
  }
}

void RemapRelations::MergeFrom(const RemapRelations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.RemapRelations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  srcs_.MergeFrom(from.srcs_);
  dsts_.MergeFrom(from.dsts_);
}

void RemapRelations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.RemapRelations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemapRelations::CopyFrom(const RemapRelations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.RemapRelations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemapRelations::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->srcs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dsts())) return false;
  return true;
}

void RemapRelations::Swap(RemapRelations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemapRelations::InternalSwap(RemapRelations* other) {
  using std::swap;
  CastToBase(&srcs_)->InternalSwap(CastToBase(&other->srcs_));
  CastToBase(&dsts_)->InternalSwap(CastToBase(&other->dsts_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemapRelations::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGInputMem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGInputMem::kLocFieldNumber;
const int MGInputMem::kOffsetFieldNumber;
const int MGInputMem::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGInputMem::MGInputMem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGInputMem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGInputMem)
}
MGInputMem::MGInputMem(const MGInputMem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGInputMem)
}

void MGInputMem::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
}

MGInputMem::~MGInputMem() {
  // @@protoc_insertion_point(destructor:es_proto.MGInputMem)
  SharedDtor();
}

void MGInputMem::SharedDtor() {
}

void MGInputMem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGInputMem::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGInputMem& MGInputMem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGInputMem.base);
  return *internal_default_instance();
}


void MGInputMem::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGInputMem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGInputMem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGInputMem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGInputMem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGInputMem)
  return false;
#undef DO_
}

void MGInputMem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGInputMem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGInputMem)
}

::google::protobuf::uint8* MGInputMem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGInputMem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGInputMem)
  return target;
}

size_t MGInputMem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGInputMem)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGInputMem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGInputMem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGInputMem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGInputMem)
  GOOGLE_DCHECK_NE(&from, this);
  const MGInputMem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGInputMem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGInputMem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGInputMem)
    MergeFrom(*source);
  }
}

void MGInputMem::MergeFrom(const MGInputMem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGInputMem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGInputMem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGInputMem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGInputMem::CopyFrom(const MGInputMem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGInputMem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGInputMem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MGInputMem::Swap(MGInputMem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGInputMem::InternalSwap(MGInputMem* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGInputMem::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGInputSto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGInputSto::kStorageLocFieldNumber;
const int MGInputSto::kStorageIdFieldNumber;
const int MGInputSto::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGInputSto::MGInputSto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGInputSto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGInputSto)
}
MGInputSto::MGInputSto(const MGInputSto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&storage_loc_, &from.storage_loc_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&storage_loc_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGInputSto)
}

void MGInputSto::SharedCtor() {
  ::memset(&storage_loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&storage_loc_)) + sizeof(size_));
}

MGInputSto::~MGInputSto() {
  // @@protoc_insertion_point(destructor:es_proto.MGInputSto)
  SharedDtor();
}

void MGInputSto::SharedDtor() {
}

void MGInputSto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGInputSto::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGInputSto& MGInputSto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGInputSto.base);
  return *internal_default_instance();
}


void MGInputSto::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGInputSto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&storage_loc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&storage_loc_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGInputSto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGInputSto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 storage_loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_storage_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 storage_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_storage_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGInputSto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGInputSto)
  return false;
#undef DO_
}

void MGInputSto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGInputSto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storage_loc(), output);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->storage_id(), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGInputSto)
}

::google::protobuf::uint8* MGInputSto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGInputSto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storage_loc(), target);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->storage_id(), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGInputSto)
  return target;
}

size_t MGInputSto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGInputSto)
  size_t total_size = 0;

  if (has_storage_loc()) {
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());
  }

  if (has_storage_id()) {
    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t MGInputSto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGInputSto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());

    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGInputSto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGInputSto)
  GOOGLE_DCHECK_NE(&from, this);
  const MGInputSto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGInputSto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGInputSto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGInputSto)
    MergeFrom(*source);
  }
}

void MGInputSto::MergeFrom(const MGInputSto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGInputSto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      storage_loc_ = from.storage_loc_;
    }
    if (cached_has_bits & 0x00000002u) {
      storage_id_ = from.storage_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGInputSto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGInputSto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGInputSto::CopyFrom(const MGInputSto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGInputSto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGInputSto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MGInputSto::Swap(MGInputSto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGInputSto::InternalSwap(MGInputSto* other) {
  using std::swap;
  swap(storage_loc_, other->storage_loc_);
  swap(storage_id_, other->storage_id_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGInputSto::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGConstant::InitAsDefaultInstance() {
  ::es_proto::_MGConstant_default_instance_._instance.get_mutable()->fill_ = const_cast< ::es_proto::Fill*>(
      ::es_proto::Fill::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGConstant::kLocFieldNumber;
const int MGConstant::kOffsetFieldNumber;
const int MGConstant::kFillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGConstant::MGConstant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGConstant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGConstant)
}
MGConstant::MGConstant(const MGConstant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fill()) {
    fill_ = new ::es_proto::Fill(*from.fill_);
  } else {
    fill_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGConstant)
}

void MGConstant::SharedCtor() {
  ::memset(&fill_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&fill_)) + sizeof(loc_));
}

MGConstant::~MGConstant() {
  // @@protoc_insertion_point(destructor:es_proto.MGConstant)
  SharedDtor();
}

void MGConstant::SharedDtor() {
  if (this != internal_default_instance()) delete fill_;
}

void MGConstant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGConstant::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGConstant& MGConstant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGConstant.base);
  return *internal_default_instance();
}


void MGConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fill_ != NULL);
    fill_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGConstant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Fill fill = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGConstant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGConstant)
  return false;
#undef DO_
}

void MGConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required .es_proto.Fill fill = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fill(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGConstant)
}

::google::protobuf::uint8* MGConstant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGConstant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required .es_proto.Fill fill = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fill(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGConstant)
  return target;
}

size_t MGConstant::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGConstant)
  size_t total_size = 0;

  if (has_fill()) {
    // required .es_proto.Fill fill = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fill_);
  }

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGConstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGConstant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .es_proto.Fill fill = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fill_);

    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGConstant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGConstant)
  GOOGLE_DCHECK_NE(&from, this);
  const MGConstant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGConstant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGConstant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGConstant)
    MergeFrom(*source);
  }
}

void MGConstant::MergeFrom(const MGConstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGConstant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fill()->::es_proto::Fill::MergeFrom(from.fill());
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGConstant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGConstant::CopyFrom(const MGConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGConstant::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_fill()) {
    if (!this->fill_->IsInitialized()) return false;
  }
  return true;
}

void MGConstant::Swap(MGConstant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGConstant::InternalSwap(MGConstant* other) {
  using std::swap;
  swap(fill_, other->fill_);
  swap(offset_, other->offset_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGConstant::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGApply::InitAsDefaultInstance() {
  ::es_proto::_MGApply_default_instance_.einsummable_ = const_cast< ::es_proto::Einsummable*>(
      ::es_proto::Einsummable::internal_default_instance());
  ::es_proto::_MGApply_default_instance_.touch_ = const_cast< ::es_proto::Touch*>(
      ::es_proto::Touch::internal_default_instance());
}
void MGApply::set_allocated_einsummable(::es_proto::Einsummable* einsummable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (einsummable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      einsummable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, einsummable, submessage_arena);
    }
    set_has_einsummable();
    op_.einsummable_ = einsummable;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MGApply.einsummable)
}
void MGApply::set_allocated_touch(::es_proto::Touch* touch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (touch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      touch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, touch, submessage_arena);
    }
    set_has_touch();
    op_.touch_ = touch;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MGApply.touch)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGApply::kLocFieldNumber;
const int MGApply::kMemsOffsetFieldNumber;
const int MGApply::kMemsSizeFieldNumber;
const int MGApply::kEinsummableFieldNumber;
const int MGApply::kTouchFieldNumber;
const int MGApply::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGApply::MGApply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGApply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGApply)
}
MGApply::MGApply(const MGApply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mems_offset_(from.mems_offset_),
      mems_size_(from.mems_size_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&loc_, &from.loc_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_) -
    reinterpret_cast<char*>(&loc_)) + sizeof(group_));
  clear_has_op();
  switch (from.op_case()) {
    case kEinsummable: {
      mutable_einsummable()->::es_proto::Einsummable::MergeFrom(from.einsummable());
      break;
    }
    case kTouch: {
      mutable_touch()->::es_proto::Touch::MergeFrom(from.touch());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.MGApply)
}

void MGApply::SharedCtor() {
  ::memset(&loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_) -
      reinterpret_cast<char*>(&loc_)) + sizeof(group_));
  clear_has_op();
}

MGApply::~MGApply() {
  // @@protoc_insertion_point(destructor:es_proto.MGApply)
  SharedDtor();
}

void MGApply::SharedDtor() {
  if (has_op()) {
    clear_op();
  }
}

void MGApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGApply::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGApply& MGApply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGApply.base);
  return *internal_default_instance();
}


void MGApply::clear_op() {
// @@protoc_insertion_point(one_of_clear_start:es_proto.MGApply)
  switch (op_case()) {
    case kEinsummable: {
      delete op_.einsummable_;
      break;
    }
    case kTouch: {
      delete op_.touch_;
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OP_NOT_SET;
}


void MGApply::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mems_offset_.Clear();
  mems_size_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&loc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_) -
        reinterpret_cast<char*>(&loc_)) + sizeof(group_));
  }
  clear_op();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGApply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGApply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 mems_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_mems_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mems_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 mems_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_mems_size())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mems_size())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.Einsummable einsummable = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_einsummable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.Touch touch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_touch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 group = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGApply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGApply)
  return false;
#undef DO_
}

void MGApply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // repeated uint64 mems_offset = 2;
  for (int i = 0, n = this->mems_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->mems_offset(i), output);
  }

  // repeated uint64 mems_size = 3;
  for (int i = 0, n = this->mems_size_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->mems_size(i), output);
  }

  switch (op_case()) {
    case kEinsummable:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_einsummable(), output);
      break;
    case kTouch:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_touch(), output);
      break;
    default: ;
  }
  // required int32 group = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGApply)
}

::google::protobuf::uint8* MGApply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // repeated uint64 mems_offset = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->mems_offset_, target);

  // repeated uint64 mems_size = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->mems_size_, target);

  switch (op_case()) {
    case kEinsummable:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_einsummable(), deterministic, target);
      break;
    case kTouch:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_touch(), deterministic, target);
      break;
    default: ;
  }
  // required int32 group = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGApply)
  return target;
}

size_t MGApply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGApply)
  size_t total_size = 0;

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  if (has_group()) {
    // required int32 group = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group());
  }

  return total_size;
}
size_t MGApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGApply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

    // required int32 group = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 mems_offset = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->mems_offset_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->mems_offset_size());
    total_size += data_size;
  }

  // repeated uint64 mems_size = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->mems_size_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->mems_size_size());
    total_size += data_size;
  }

  switch (op_case()) {
    // optional .es_proto.Einsummable einsummable = 4;
    case kEinsummable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.einsummable_);
      break;
    }
    // optional .es_proto.Touch touch = 5;
    case kTouch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.touch_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGApply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGApply)
  GOOGLE_DCHECK_NE(&from, this);
  const MGApply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGApply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGApply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGApply)
    MergeFrom(*source);
  }
}

void MGApply::MergeFrom(const MGApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGApply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mems_offset_.MergeFrom(from.mems_offset_);
  mems_size_.MergeFrom(from.mems_size_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      loc_ = from.loc_;
    }
    if (cached_has_bits & 0x00000002u) {
      group_ = from.group_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.op_case()) {
    case kEinsummable: {
      mutable_einsummable()->::es_proto::Einsummable::MergeFrom(from.einsummable());
      break;
    }
    case kTouch: {
      mutable_touch()->::es_proto::Touch::MergeFrom(from.touch());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
}

void MGApply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGApply::CopyFrom(const MGApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGApply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  switch (op_case()) {
    case kEinsummable: {
      if (has_einsummable()) {
        if (!this->einsummable().IsInitialized()) return false;
      }
      break;
    }
    case kTouch: {
      if (has_touch()) {
        if (!this->touch().IsInitialized()) return false;
      }
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  return true;
}

void MGApply::Swap(MGApply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGApply::InternalSwap(MGApply* other) {
  using std::swap;
  mems_offset_.InternalSwap(&other->mems_offset_);
  mems_size_.InternalSwap(&other->mems_size_);
  swap(loc_, other->loc_);
  swap(group_, other->group_);
  swap(op_, other->op_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGApply::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGMove::kSrcLocFieldNumber;
const int MGMove::kSrcOffsetFieldNumber;
const int MGMove::kDstLocFieldNumber;
const int MGMove::kDstOffsetFieldNumber;
const int MGMove::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGMove::MGMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGMove)
}
MGMove::MGMove(const MGMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&src_offset_, &from.src_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&src_offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGMove)
}

void MGMove::SharedCtor() {
  ::memset(&src_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&src_offset_)) + sizeof(size_));
}

MGMove::~MGMove() {
  // @@protoc_insertion_point(destructor:es_proto.MGMove)
  SharedDtor();
}

void MGMove::SharedDtor() {
}

void MGMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGMove::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGMove& MGMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGMove.base);
  return *internal_default_instance();
}


void MGMove::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&src_offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&src_offset_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 src_loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_src_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 src_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_src_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &src_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dst_loc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_dst_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 dst_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_dst_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dst_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGMove)
  return false;
#undef DO_
}

void MGMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src_loc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->src_loc(), output);
  }

  // required uint64 src_offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->src_offset(), output);
  }

  // required int32 dst_loc = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dst_loc(), output);
  }

  // required uint64 dst_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->dst_offset(), output);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGMove)
}

::google::protobuf::uint8* MGMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src_loc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->src_loc(), target);
  }

  // required uint64 src_offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->src_offset(), target);
  }

  // required int32 dst_loc = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dst_loc(), target);
  }

  // required uint64 dst_offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->dst_offset(), target);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGMove)
  return target;
}

size_t MGMove::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGMove)
  size_t total_size = 0;

  if (has_src_offset()) {
    // required uint64 src_offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src_offset());
  }

  if (has_src_loc()) {
    // required int32 src_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_loc());
  }

  if (has_dst_loc()) {
    // required int32 dst_loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_loc());
  }

  if (has_dst_offset()) {
    // required uint64 dst_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dst_offset());
  }

  if (has_size()) {
    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t MGMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 src_offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src_offset());

    // required int32 src_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_loc());

    // required int32 dst_loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_loc());

    // required uint64 dst_offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dst_offset());

    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGMove)
  GOOGLE_DCHECK_NE(&from, this);
  const MGMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGMove)
    MergeFrom(*source);
  }
}

void MGMove::MergeFrom(const MGMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      src_offset_ = from.src_offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      src_loc_ = from.src_loc_;
    }
    if (cached_has_bits & 0x00000004u) {
      dst_loc_ = from.dst_loc_;
    }
    if (cached_has_bits & 0x00000008u) {
      dst_offset_ = from.dst_offset_;
    }
    if (cached_has_bits & 0x00000010u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGMove::CopyFrom(const MGMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void MGMove::Swap(MGMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGMove::InternalSwap(MGMove* other) {
  using std::swap;
  swap(src_offset_, other->src_offset_);
  swap(src_loc_, other->src_loc_);
  swap(dst_loc_, other->dst_loc_);
  swap(dst_offset_, other->dst_offset_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGMove::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGEvict::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGEvict::kStorageLocFieldNumber;
const int MGEvict::kStorageIdFieldNumber;
const int MGEvict::kLocFieldNumber;
const int MGEvict::kOffsetFieldNumber;
const int MGEvict::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGEvict::MGEvict()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGEvict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGEvict)
}
MGEvict::MGEvict(const MGEvict& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&storage_loc_, &from.storage_loc_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGEvict)
}

void MGEvict::SharedCtor() {
  ::memset(&storage_loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
}

MGEvict::~MGEvict() {
  // @@protoc_insertion_point(destructor:es_proto.MGEvict)
  SharedDtor();
}

void MGEvict::SharedDtor() {
}

void MGEvict::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGEvict::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGEvict& MGEvict::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGEvict.base);
  return *internal_default_instance();
}


void MGEvict::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGEvict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&storage_loc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGEvict::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGEvict)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 storage_loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_storage_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 storage_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_storage_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 loc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGEvict)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGEvict)
  return false;
#undef DO_
}

void MGEvict::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGEvict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storage_loc(), output);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->storage_id(), output);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loc(), output);
  }

  // required uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGEvict)
}

::google::protobuf::uint8* MGEvict::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGEvict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storage_loc(), target);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->storage_id(), target);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loc(), target);
  }

  // required uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGEvict)
  return target;
}

size_t MGEvict::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGEvict)
  size_t total_size = 0;

  if (has_storage_loc()) {
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());
  }

  if (has_storage_id()) {
    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());
  }

  if (has_offset()) {
    // required uint64 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGEvict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGEvict)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());

    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());

    // required uint64 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGEvict::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGEvict)
  GOOGLE_DCHECK_NE(&from, this);
  const MGEvict* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGEvict>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGEvict)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGEvict)
    MergeFrom(*source);
  }
}

void MGEvict::MergeFrom(const MGEvict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGEvict)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      storage_loc_ = from.storage_loc_;
    }
    if (cached_has_bits & 0x00000002u) {
      storage_id_ = from.storage_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000010u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGEvict::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGEvict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGEvict::CopyFrom(const MGEvict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGEvict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGEvict::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void MGEvict::Swap(MGEvict* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGEvict::InternalSwap(MGEvict* other) {
  using std::swap;
  swap(storage_loc_, other->storage_loc_);
  swap(storage_id_, other->storage_id_);
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGEvict::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGLoad::kStorageLocFieldNumber;
const int MGLoad::kStorageIdFieldNumber;
const int MGLoad::kLocFieldNumber;
const int MGLoad::kOffsetFieldNumber;
const int MGLoad::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGLoad::MGLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGLoad.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGLoad)
}
MGLoad::MGLoad(const MGLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&storage_loc_, &from.storage_loc_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGLoad)
}

void MGLoad::SharedCtor() {
  ::memset(&storage_loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
}

MGLoad::~MGLoad() {
  // @@protoc_insertion_point(destructor:es_proto.MGLoad)
  SharedDtor();
}

void MGLoad::SharedDtor() {
}

void MGLoad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGLoad::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGLoad& MGLoad::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGLoad.base);
  return *internal_default_instance();
}


void MGLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&storage_loc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&storage_loc_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGLoad)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 storage_loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_storage_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 storage_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_storage_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 loc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGLoad)
  return false;
#undef DO_
}

void MGLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storage_loc(), output);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->storage_id(), output);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loc(), output);
  }

  // required uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGLoad)
}

::google::protobuf::uint8* MGLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 storage_loc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storage_loc(), target);
  }

  // required int32 storage_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->storage_id(), target);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loc(), target);
  }

  // required uint64 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // required uint64 size = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGLoad)
  return target;
}

size_t MGLoad::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGLoad)
  size_t total_size = 0;

  if (has_storage_loc()) {
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());
  }

  if (has_storage_id()) {
    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());
  }

  if (has_offset()) {
    // required uint64 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGLoad)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 storage_loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_loc());

    // required int32 storage_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_id());

    // required uint64 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const MGLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGLoad)
    MergeFrom(*source);
  }
}

void MGLoad::MergeFrom(const MGLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      storage_loc_ = from.storage_loc_;
    }
    if (cached_has_bits & 0x00000002u) {
      storage_id_ = from.storage_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000010u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGLoad::CopyFrom(const MGLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGLoad::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void MGLoad::Swap(MGLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGLoad::InternalSwap(MGLoad* other) {
  using std::swap;
  swap(storage_loc_, other->storage_loc_);
  swap(storage_id_, other->storage_id_);
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGLoad::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGPartialize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGPartialize::kLocFieldNumber;
const int MGPartialize::kOffsetFieldNumber;
const int MGPartialize::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGPartialize::MGPartialize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGPartialize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGPartialize)
}
MGPartialize::MGPartialize(const MGPartialize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGPartialize)
}

void MGPartialize::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
}

MGPartialize::~MGPartialize() {
  // @@protoc_insertion_point(destructor:es_proto.MGPartialize)
  SharedDtor();
}

void MGPartialize::SharedDtor() {
}

void MGPartialize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGPartialize::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGPartialize& MGPartialize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGPartialize.base);
  return *internal_default_instance();
}


void MGPartialize::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGPartialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGPartialize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGPartialize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGPartialize)
  return false;
#undef DO_
}

void MGPartialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGPartialize)
}

::google::protobuf::uint8* MGPartialize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGPartialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGPartialize)
  return target;
}

size_t MGPartialize::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGPartialize)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGPartialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGPartialize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGPartialize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGPartialize)
  GOOGLE_DCHECK_NE(&from, this);
  const MGPartialize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGPartialize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGPartialize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGPartialize)
    MergeFrom(*source);
  }
}

void MGPartialize::MergeFrom(const MGPartialize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGPartialize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGPartialize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGPartialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGPartialize::CopyFrom(const MGPartialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGPartialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGPartialize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MGPartialize::Swap(MGPartialize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGPartialize::InternalSwap(MGPartialize* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGPartialize::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGAlloc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGAlloc::kLocFieldNumber;
const int MGAlloc::kOffsetFieldNumber;
const int MGAlloc::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGAlloc::MGAlloc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGAlloc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGAlloc)
}
MGAlloc::MGAlloc(const MGAlloc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGAlloc)
}

void MGAlloc::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
}

MGAlloc::~MGAlloc() {
  // @@protoc_insertion_point(destructor:es_proto.MGAlloc)
  SharedDtor();
}

void MGAlloc::SharedDtor() {
}

void MGAlloc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGAlloc::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGAlloc& MGAlloc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGAlloc.base);
  return *internal_default_instance();
}


void MGAlloc::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGAlloc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGAlloc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGAlloc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGAlloc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGAlloc)
  return false;
#undef DO_
}

void MGAlloc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGAlloc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGAlloc)
}

::google::protobuf::uint8* MGAlloc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGAlloc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGAlloc)
  return target;
}

size_t MGAlloc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGAlloc)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGAlloc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGAlloc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGAlloc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGAlloc)
  GOOGLE_DCHECK_NE(&from, this);
  const MGAlloc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGAlloc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGAlloc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGAlloc)
    MergeFrom(*source);
  }
}

void MGAlloc::MergeFrom(const MGAlloc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGAlloc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGAlloc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGAlloc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGAlloc::CopyFrom(const MGAlloc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGAlloc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGAlloc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MGAlloc::Swap(MGAlloc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGAlloc::InternalSwap(MGAlloc* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGAlloc::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MGDel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGDel::kLocFieldNumber;
const int MGDel::kOffsetFieldNumber;
const int MGDel::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGDel::MGDel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MGDel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MGDel)
}
MGDel::MGDel(const MGDel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MGDel)
}

void MGDel::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
}

MGDel::~MGDel() {
  // @@protoc_insertion_point(destructor:es_proto.MGDel)
  SharedDtor();
}

void MGDel::SharedDtor() {
}

void MGDel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MGDel::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGDel& MGDel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MGDel.base);
  return *internal_default_instance();
}


void MGDel::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MGDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MGDel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MGDel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MGDel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MGDel)
  return false;
#undef DO_
}

void MGDel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MGDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loc(), output);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MGDel)
}

::google::protobuf::uint8* MGDel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MGDel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 loc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loc(), target);
  }

  // required uint64 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MGDel)
  return target;
}

size_t MGDel::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MGDel)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MGDel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MGDel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MGDel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MGDel)
  GOOGLE_DCHECK_NE(&from, this);
  const MGDel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGDel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MGDel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MGDel)
    MergeFrom(*source);
  }
}

void MGDel::MergeFrom(const MGDel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MGDel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MGDel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MGDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGDel::CopyFrom(const MGDel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MGDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGDel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MGDel::Swap(MGDel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGDel::InternalSwap(MGDel* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MGDel::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemGraphNode::InitAsDefaultInstance() {
  ::es_proto::_MemGraphNode_default_instance_.inputmem_ = const_cast< ::es_proto::MGInputMem*>(
      ::es_proto::MGInputMem::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.inputsto_ = const_cast< ::es_proto::MGInputSto*>(
      ::es_proto::MGInputSto::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.constant_ = const_cast< ::es_proto::MGConstant*>(
      ::es_proto::MGConstant::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.apply_ = const_cast< ::es_proto::MGApply*>(
      ::es_proto::MGApply::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.move_ = const_cast< ::es_proto::MGMove*>(
      ::es_proto::MGMove::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.evict_ = const_cast< ::es_proto::MGEvict*>(
      ::es_proto::MGEvict::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.load_ = const_cast< ::es_proto::MGLoad*>(
      ::es_proto::MGLoad::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.partialize_ = const_cast< ::es_proto::MGPartialize*>(
      ::es_proto::MGPartialize::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.alloc_ = const_cast< ::es_proto::MGAlloc*>(
      ::es_proto::MGAlloc::internal_default_instance());
  ::es_proto::_MemGraphNode_default_instance_.del_ = const_cast< ::es_proto::MGDel*>(
      ::es_proto::MGDel::internal_default_instance());
}
void MemGraphNode::set_allocated_inputmem(::es_proto::MGInputMem* inputmem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (inputmem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inputmem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inputmem, submessage_arena);
    }
    set_has_inputmem();
    node_.inputmem_ = inputmem;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.inputmem)
}
void MemGraphNode::set_allocated_inputsto(::es_proto::MGInputSto* inputsto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (inputsto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inputsto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inputsto, submessage_arena);
    }
    set_has_inputsto();
    node_.inputsto_ = inputsto;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.inputsto)
}
void MemGraphNode::set_allocated_constant(::es_proto::MGConstant* constant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (constant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      constant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    node_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.constant)
}
void MemGraphNode::set_allocated_apply(::es_proto::MGApply* apply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (apply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      apply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, apply, submessage_arena);
    }
    set_has_apply();
    node_.apply_ = apply;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.apply)
}
void MemGraphNode::set_allocated_move(::es_proto::MGMove* move) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (move) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    set_has_move();
    node_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.move)
}
void MemGraphNode::set_allocated_evict(::es_proto::MGEvict* evict) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (evict) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      evict = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evict, submessage_arena);
    }
    set_has_evict();
    node_.evict_ = evict;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.evict)
}
void MemGraphNode::set_allocated_load(::es_proto::MGLoad* load) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (load) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load, submessage_arena);
    }
    set_has_load();
    node_.load_ = load;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.load)
}
void MemGraphNode::set_allocated_partialize(::es_proto::MGPartialize* partialize) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (partialize) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      partialize = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, partialize, submessage_arena);
    }
    set_has_partialize();
    node_.partialize_ = partialize;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.partialize)
}
void MemGraphNode::set_allocated_alloc(::es_proto::MGAlloc* alloc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (alloc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alloc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alloc, submessage_arena);
    }
    set_has_alloc();
    node_.alloc_ = alloc;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.alloc)
}
void MemGraphNode::set_allocated_del(::es_proto::MGDel* del) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_node();
  if (del) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      del = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, del, submessage_arena);
    }
    set_has_del();
    node_.del_ = del;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.MemGraphNode.del)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemGraphNode::kInputmemFieldNumber;
const int MemGraphNode::kInputstoFieldNumber;
const int MemGraphNode::kConstantFieldNumber;
const int MemGraphNode::kApplyFieldNumber;
const int MemGraphNode::kMoveFieldNumber;
const int MemGraphNode::kEvictFieldNumber;
const int MemGraphNode::kLoadFieldNumber;
const int MemGraphNode::kPartializeFieldNumber;
const int MemGraphNode::kAllocFieldNumber;
const int MemGraphNode::kDelFieldNumber;
const int MemGraphNode::kInnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemGraphNode::MemGraphNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MemGraphNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MemGraphNode)
}
MemGraphNode::MemGraphNode(const MemGraphNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      inns_(from.inns_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_node();
  switch (from.node_case()) {
    case kInputmem: {
      mutable_inputmem()->::es_proto::MGInputMem::MergeFrom(from.inputmem());
      break;
    }
    case kInputsto: {
      mutable_inputsto()->::es_proto::MGInputSto::MergeFrom(from.inputsto());
      break;
    }
    case kConstant: {
      mutable_constant()->::es_proto::MGConstant::MergeFrom(from.constant());
      break;
    }
    case kApply: {
      mutable_apply()->::es_proto::MGApply::MergeFrom(from.apply());
      break;
    }
    case kMove: {
      mutable_move()->::es_proto::MGMove::MergeFrom(from.move());
      break;
    }
    case kEvict: {
      mutable_evict()->::es_proto::MGEvict::MergeFrom(from.evict());
      break;
    }
    case kLoad: {
      mutable_load()->::es_proto::MGLoad::MergeFrom(from.load());
      break;
    }
    case kPartialize: {
      mutable_partialize()->::es_proto::MGPartialize::MergeFrom(from.partialize());
      break;
    }
    case kAlloc: {
      mutable_alloc()->::es_proto::MGAlloc::MergeFrom(from.alloc());
      break;
    }
    case kDel: {
      mutable_del()->::es_proto::MGDel::MergeFrom(from.del());
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.MemGraphNode)
}

void MemGraphNode::SharedCtor() {
  clear_has_node();
}

MemGraphNode::~MemGraphNode() {
  // @@protoc_insertion_point(destructor:es_proto.MemGraphNode)
  SharedDtor();
}

void MemGraphNode::SharedDtor() {
  if (has_node()) {
    clear_node();
  }
}

void MemGraphNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemGraphNode::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemGraphNode& MemGraphNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MemGraphNode.base);
  return *internal_default_instance();
}


void MemGraphNode::clear_node() {
// @@protoc_insertion_point(one_of_clear_start:es_proto.MemGraphNode)
  switch (node_case()) {
    case kInputmem: {
      delete node_.inputmem_;
      break;
    }
    case kInputsto: {
      delete node_.inputsto_;
      break;
    }
    case kConstant: {
      delete node_.constant_;
      break;
    }
    case kApply: {
      delete node_.apply_;
      break;
    }
    case kMove: {
      delete node_.move_;
      break;
    }
    case kEvict: {
      delete node_.evict_;
      break;
    }
    case kLoad: {
      delete node_.load_;
      break;
    }
    case kPartialize: {
      delete node_.partialize_;
      break;
    }
    case kAlloc: {
      delete node_.alloc_;
      break;
    }
    case kDel: {
      delete node_.del_;
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NODE_NOT_SET;
}


void MemGraphNode::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MemGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inns_.Clear();
  clear_node();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemGraphNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MemGraphNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .es_proto.MGInputMem inputmem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputmem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGInputSto inputsto = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputsto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGConstant constant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGApply apply = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGMove move = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGEvict evict = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evict()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGLoad load = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGPartialize partialize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partialize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGAlloc alloc = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.MGDel del = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_del()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 inns = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88u, input, this->mutable_inns())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inns())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MemGraphNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MemGraphNode)
  return false;
#undef DO_
}

void MemGraphNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MemGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (node_case()) {
    case kInputmem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_inputmem(), output);
      break;
    case kInputsto:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_inputsto(), output);
      break;
    case kConstant:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_constant(), output);
      break;
    case kApply:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_apply(), output);
      break;
    case kMove:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_move(), output);
      break;
    case kEvict:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_evict(), output);
      break;
    case kLoad:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_load(), output);
      break;
    case kPartialize:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_partialize(), output);
      break;
    case kAlloc:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_alloc(), output);
      break;
    case kDel:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_del(), output);
      break;
    default: ;
  }
  // repeated int32 inns = 11;
  for (int i = 0, n = this->inns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->inns(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MemGraphNode)
}

::google::protobuf::uint8* MemGraphNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MemGraphNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (node_case()) {
    case kInputmem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_inputmem(), deterministic, target);
      break;
    case kInputsto:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_inputsto(), deterministic, target);
      break;
    case kConstant:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_constant(), deterministic, target);
      break;
    case kApply:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_apply(), deterministic, target);
      break;
    case kMove:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_move(), deterministic, target);
      break;
    case kEvict:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_evict(), deterministic, target);
      break;
    case kLoad:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_load(), deterministic, target);
      break;
    case kPartialize:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_partialize(), deterministic, target);
      break;
    case kAlloc:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          9, this->_internal_alloc(), deterministic, target);
      break;
    case kDel:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_del(), deterministic, target);
      break;
    default: ;
  }
  // repeated int32 inns = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(11, this->inns_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MemGraphNode)
  return target;
}

size_t MemGraphNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MemGraphNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 inns = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->inns_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->inns_size());
    total_size += data_size;
  }

  switch (node_case()) {
    // optional .es_proto.MGInputMem inputmem = 1;
    case kInputmem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.inputmem_);
      break;
    }
    // optional .es_proto.MGInputSto inputsto = 2;
    case kInputsto: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.inputsto_);
      break;
    }
    // optional .es_proto.MGConstant constant = 3;
    case kConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.constant_);
      break;
    }
    // optional .es_proto.MGApply apply = 4;
    case kApply: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.apply_);
      break;
    }
    // optional .es_proto.MGMove move = 5;
    case kMove: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.move_);
      break;
    }
    // optional .es_proto.MGEvict evict = 6;
    case kEvict: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.evict_);
      break;
    }
    // optional .es_proto.MGLoad load = 7;
    case kLoad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.load_);
      break;
    }
    // optional .es_proto.MGPartialize partialize = 8;
    case kPartialize: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.partialize_);
      break;
    }
    // optional .es_proto.MGAlloc alloc = 9;
    case kAlloc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.alloc_);
      break;
    }
    // optional .es_proto.MGDel del = 10;
    case kDel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *node_.del_);
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemGraphNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MemGraphNode)
  GOOGLE_DCHECK_NE(&from, this);
  const MemGraphNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemGraphNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MemGraphNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MemGraphNode)
    MergeFrom(*source);
  }
}

void MemGraphNode::MergeFrom(const MemGraphNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MemGraphNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inns_.MergeFrom(from.inns_);
  switch (from.node_case()) {
    case kInputmem: {
      mutable_inputmem()->::es_proto::MGInputMem::MergeFrom(from.inputmem());
      break;
    }
    case kInputsto: {
      mutable_inputsto()->::es_proto::MGInputSto::MergeFrom(from.inputsto());
      break;
    }
    case kConstant: {
      mutable_constant()->::es_proto::MGConstant::MergeFrom(from.constant());
      break;
    }
    case kApply: {
      mutable_apply()->::es_proto::MGApply::MergeFrom(from.apply());
      break;
    }
    case kMove: {
      mutable_move()->::es_proto::MGMove::MergeFrom(from.move());
      break;
    }
    case kEvict: {
      mutable_evict()->::es_proto::MGEvict::MergeFrom(from.evict());
      break;
    }
    case kLoad: {
      mutable_load()->::es_proto::MGLoad::MergeFrom(from.load());
      break;
    }
    case kPartialize: {
      mutable_partialize()->::es_proto::MGPartialize::MergeFrom(from.partialize());
      break;
    }
    case kAlloc: {
      mutable_alloc()->::es_proto::MGAlloc::MergeFrom(from.alloc());
      break;
    }
    case kDel: {
      mutable_del()->::es_proto::MGDel::MergeFrom(from.del());
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
}

void MemGraphNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MemGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemGraphNode::CopyFrom(const MemGraphNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MemGraphNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemGraphNode::IsInitialized() const {
  switch (node_case()) {
    case kInputmem: {
      if (has_inputmem()) {
        if (!this->inputmem().IsInitialized()) return false;
      }
      break;
    }
    case kInputsto: {
      if (has_inputsto()) {
        if (!this->inputsto().IsInitialized()) return false;
      }
      break;
    }
    case kConstant: {
      if (has_constant()) {
        if (!this->constant().IsInitialized()) return false;
      }
      break;
    }
    case kApply: {
      if (has_apply()) {
        if (!this->apply().IsInitialized()) return false;
      }
      break;
    }
    case kMove: {
      if (has_move()) {
        if (!this->move().IsInitialized()) return false;
      }
      break;
    }
    case kEvict: {
      if (has_evict()) {
        if (!this->evict().IsInitialized()) return false;
      }
      break;
    }
    case kLoad: {
      if (has_load()) {
        if (!this->load().IsInitialized()) return false;
      }
      break;
    }
    case kPartialize: {
      if (has_partialize()) {
        if (!this->partialize().IsInitialized()) return false;
      }
      break;
    }
    case kAlloc: {
      if (has_alloc()) {
        if (!this->alloc().IsInitialized()) return false;
      }
      break;
    }
    case kDel: {
      if (has_del()) {
        if (!this->del().IsInitialized()) return false;
      }
      break;
    }
    case NODE_NOT_SET: {
      break;
    }
  }
  return true;
}

void MemGraphNode::Swap(MemGraphNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemGraphNode::InternalSwap(MemGraphNode* other) {
  using std::swap;
  inns_.InternalSwap(&other->inns_);
  swap(node_, other->node_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemGraphNode::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemGraph::kNumComputeLocsFieldNumber;
const int MemGraph::kNumStorageLocsFieldNumber;
const int MemGraph::kStorageLocsFieldNumber;
const int MemGraph::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemGraph::MemGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MemGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MemGraph)
}
MemGraph::MemGraph(const MemGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      storage_locs_(from.storage_locs_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_compute_locs_, &from.num_compute_locs_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_storage_locs_) -
    reinterpret_cast<char*>(&num_compute_locs_)) + sizeof(num_storage_locs_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MemGraph)
}

void MemGraph::SharedCtor() {
  ::memset(&num_compute_locs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_storage_locs_) -
      reinterpret_cast<char*>(&num_compute_locs_)) + sizeof(num_storage_locs_));
}

MemGraph::~MemGraph() {
  // @@protoc_insertion_point(destructor:es_proto.MemGraph)
  SharedDtor();
}

void MemGraph::SharedDtor() {
}

void MemGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemGraph::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemGraph& MemGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MemGraph.base);
  return *internal_default_instance();
}


void MemGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MemGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storage_locs_.Clear();
  nodes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&num_compute_locs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_storage_locs_) -
        reinterpret_cast<char*>(&num_compute_locs_)) + sizeof(num_storage_locs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MemGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num_compute_locs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_compute_locs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_compute_locs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num_storage_locs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_storage_locs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_storage_locs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 storage_locs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_storage_locs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_storage_locs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.MemGraphNode nodes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MemGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MemGraph)
  return false;
#undef DO_
}

void MemGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MemGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 num_compute_locs = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_compute_locs(), output);
  }

  // required int32 num_storage_locs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_storage_locs(), output);
  }

  // repeated int32 storage_locs = 3;
  for (int i = 0, n = this->storage_locs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->storage_locs(i), output);
  }

  // repeated .es_proto.MemGraphNode nodes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MemGraph)
}

::google::protobuf::uint8* MemGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MemGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 num_compute_locs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_compute_locs(), target);
  }

  // required int32 num_storage_locs = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_storage_locs(), target);
  }

  // repeated int32 storage_locs = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->storage_locs_, target);

  // repeated .es_proto.MemGraphNode nodes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MemGraph)
  return target;
}

size_t MemGraph::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MemGraph)
  size_t total_size = 0;

  if (has_num_compute_locs()) {
    // required int32 num_compute_locs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_compute_locs());
  }

  if (has_num_storage_locs()) {
    // required int32 num_storage_locs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_storage_locs());
  }

  return total_size;
}
size_t MemGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MemGraph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 num_compute_locs = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_compute_locs());

    // required int32 num_storage_locs = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_storage_locs());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 storage_locs = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->storage_locs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->storage_locs_size());
    total_size += data_size;
  }

  // repeated .es_proto.MemGraphNode nodes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MemGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const MemGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MemGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MemGraph)
    MergeFrom(*source);
  }
}

void MemGraph::MergeFrom(const MemGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MemGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  storage_locs_.MergeFrom(from.storage_locs_);
  nodes_.MergeFrom(from.nodes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      num_compute_locs_ = from.num_compute_locs_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_storage_locs_ = from.num_storage_locs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MemGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemGraph::CopyFrom(const MemGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MemGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemGraph::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  return true;
}

void MemGraph::Swap(MemGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemGraph::InternalSwap(MemGraph* other) {
  using std::swap;
  storage_locs_.InternalSwap(&other->storage_locs_);
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  swap(num_compute_locs_, other->num_compute_locs_);
  swap(num_storage_locs_, other->num_storage_locs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemGraph::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mem::kOffsetFieldNumber;
const int Mem::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mem::Mem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_Mem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.Mem)
}
Mem::Mem(const Mem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:es_proto.Mem)
}

void Mem::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
}

Mem::~Mem() {
  // @@protoc_insertion_point(destructor:es_proto.Mem)
  SharedDtor();
}

void Mem::SharedDtor() {
}

void Mem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mem::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mem& Mem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_Mem.base);
  return *internal_default_instance();
}


void Mem::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.Mem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Mem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.Mem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.Mem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.Mem)
  return false;
#undef DO_
}

void Mem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.Mem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.Mem)
}

::google::protobuf::uint8* Mem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.Mem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.Mem)
  return target;
}

size_t Mem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.Mem)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t Mem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.Mem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.Mem)
  GOOGLE_DCHECK_NE(&from, this);
  const Mem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.Mem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.Mem)
    MergeFrom(*source);
  }
}

void Mem::MergeFrom(const Mem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.Mem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Mem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.Mem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mem::CopyFrom(const Mem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.Mem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Mem::Swap(Mem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mem::InternalSwap(Mem* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mem::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemLoc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemLoc::kOffsetFieldNumber;
const int MemLoc::kSizeFieldNumber;
const int MemLoc::kLocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemLoc::MemLoc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_MemLoc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.MemLoc)
}
MemLoc::MemLoc(const MemLoc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  // @@protoc_insertion_point(copy_constructor:es_proto.MemLoc)
}

void MemLoc::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loc_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
}

MemLoc::~MemLoc() {
  // @@protoc_insertion_point(destructor:es_proto.MemLoc)
  SharedDtor();
}

void MemLoc::SharedDtor() {
}

void MemLoc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemLoc::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemLoc& MemLoc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_MemLoc.base);
  return *internal_default_instance();
}


void MemLoc::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.MemLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loc_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(loc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemLoc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.MemLoc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 loc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_loc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.MemLoc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.MemLoc)
  return false;
#undef DO_
}

void MemLoc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.MemLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.MemLoc)
}

::google::protobuf::uint8* MemLoc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.MemLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // required int32 loc = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.MemLoc)
  return target;
}

size_t MemLoc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.MemLoc)
  size_t total_size = 0;

  if (has_offset()) {
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_size()) {
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_loc()) {
    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());
  }

  return total_size;
}
size_t MemLoc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.MemLoc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int32 loc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loc());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemLoc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.MemLoc)
  GOOGLE_DCHECK_NE(&from, this);
  const MemLoc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemLoc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.MemLoc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.MemLoc)
    MergeFrom(*source);
  }
}

void MemLoc::MergeFrom(const MemLoc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.MemLoc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      loc_ = from.loc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemLoc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.MemLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemLoc::CopyFrom(const MemLoc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.MemLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemLoc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MemLoc::Swap(MemLoc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemLoc::InternalSwap(MemLoc* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(loc_, other->loc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemLoc::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IEInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IEInit::kWorldSizeFieldNumber;
const int IEInit::kMemSizeFieldNumber;
const int IEInit::kNumThreadsFieldNumber;
const int IEInit::kNumFilesFieldNumber;
const int IEInit::kBatchSizeFieldNumber;
const int IEInit::kSeqLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IEInit::IEInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IEInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IEInit)
}
IEInit::IEInit(const IEInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mem_size_, &from.mem_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_files_) -
    reinterpret_cast<char*>(&mem_size_)) + sizeof(num_files_));
  // @@protoc_insertion_point(copy_constructor:es_proto.IEInit)
}

void IEInit::SharedCtor() {
  ::memset(&mem_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_files_) -
      reinterpret_cast<char*>(&mem_size_)) + sizeof(num_files_));
}

IEInit::~IEInit() {
  // @@protoc_insertion_point(destructor:es_proto.IEInit)
  SharedDtor();
}

void IEInit::SharedDtor() {
}

void IEInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IEInit::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IEInit& IEInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IEInit.base);
  return *internal_default_instance();
}


void IEInit::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IEInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&mem_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_files_) -
        reinterpret_cast<char*>(&mem_size_)) + sizeof(num_files_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IEInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IEInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 world_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_world_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &world_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 mem_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mem_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mem_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num_threads = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 num_files = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_files();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_files_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 batch_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_batch_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 seq_len = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_seq_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IEInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IEInit)
  return false;
#undef DO_
}

void IEInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IEInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 world_size = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->world_size(), output);
  }

  // required uint64 mem_size = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mem_size(), output);
  }

  // required int32 num_threads = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_threads(), output);
  }

  // required int32 num_files = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_files(), output);
  }

  // required uint64 batch_size = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->batch_size(), output);
  }

  // required uint64 seq_len = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->seq_len(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IEInit)
}

::google::protobuf::uint8* IEInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IEInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 world_size = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->world_size(), target);
  }

  // required uint64 mem_size = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mem_size(), target);
  }

  // required int32 num_threads = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_threads(), target);
  }

  // required int32 num_files = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num_files(), target);
  }

  // required uint64 batch_size = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->batch_size(), target);
  }

  // required uint64 seq_len = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->seq_len(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IEInit)
  return target;
}

size_t IEInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IEInit)
  size_t total_size = 0;

  if (has_mem_size()) {
    // required uint64 mem_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mem_size());
  }

  if (has_world_size()) {
    // required int32 world_size = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->world_size());
  }

  if (has_num_threads()) {
    // required int32 num_threads = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_threads());
  }

  if (has_batch_size()) {
    // required uint64 batch_size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch_size());
  }

  if (has_seq_len()) {
    // required uint64 seq_len = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());
  }

  if (has_num_files()) {
    // required int32 num_files = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_files());
  }

  return total_size;
}
size_t IEInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IEInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 mem_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mem_size());

    // required int32 world_size = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->world_size());

    // required int32 num_threads = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_threads());

    // required uint64 batch_size = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch_size());

    // required uint64 seq_len = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());

    // required int32 num_files = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_files());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IEInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IEInit)
  GOOGLE_DCHECK_NE(&from, this);
  const IEInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IEInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IEInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IEInit)
    MergeFrom(*source);
  }
}

void IEInit::MergeFrom(const IEInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IEInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mem_size_ = from.mem_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      world_size_ = from.world_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_threads_ = from.num_threads_;
    }
    if (cached_has_bits & 0x00000008u) {
      batch_size_ = from.batch_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      seq_len_ = from.seq_len_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_files_ = from.num_files_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IEInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IEInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IEInit::CopyFrom(const IEInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IEInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IEInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void IEInit::Swap(IEInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IEInit::InternalSwap(IEInit* other) {
  using std::swap;
  swap(mem_size_, other->mem_size_);
  swap(world_size_, other->world_size_);
  swap(num_threads_, other->num_threads_);
  swap(batch_size_, other->batch_size_);
  swap(seq_len_, other->seq_len_);
  swap(num_files_, other->num_files_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IEInit::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IECloseReaders::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IECloseReaders::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IECloseReaders::IECloseReaders()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IECloseReaders.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IECloseReaders)
}
IECloseReaders::IECloseReaders(const IECloseReaders& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:es_proto.IECloseReaders)
}

void IECloseReaders::SharedCtor() {
  dummy_ = 0;
}

IECloseReaders::~IECloseReaders() {
  // @@protoc_insertion_point(destructor:es_proto.IECloseReaders)
  SharedDtor();
}

void IECloseReaders::SharedDtor() {
}

void IECloseReaders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IECloseReaders::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IECloseReaders& IECloseReaders::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IECloseReaders.base);
  return *internal_default_instance();
}


void IECloseReaders::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IECloseReaders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IECloseReaders::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IECloseReaders)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IECloseReaders)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IECloseReaders)
  return false;
#undef DO_
}

void IECloseReaders::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IECloseReaders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IECloseReaders)
}

::google::protobuf::uint8* IECloseReaders::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IECloseReaders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IECloseReaders)
  return target;
}

size_t IECloseReaders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IECloseReaders)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IECloseReaders::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IECloseReaders)
  GOOGLE_DCHECK_NE(&from, this);
  const IECloseReaders* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IECloseReaders>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IECloseReaders)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IECloseReaders)
    MergeFrom(*source);
  }
}

void IECloseReaders::MergeFrom(const IECloseReaders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IECloseReaders)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void IECloseReaders::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IECloseReaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IECloseReaders::CopyFrom(const IECloseReaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IECloseReaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IECloseReaders::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void IECloseReaders::Swap(IECloseReaders* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IECloseReaders::InternalSwap(IECloseReaders* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IECloseReaders::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IELoadWeight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IELoadWeight::kNameFieldNumber;
const int IELoadWeight::kDataLocsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IELoadWeight::IELoadWeight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IELoadWeight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IELoadWeight)
}
IELoadWeight::IELoadWeight(const IELoadWeight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_locs_(from.data_locs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.IELoadWeight)
}

void IELoadWeight::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IELoadWeight::~IELoadWeight() {
  // @@protoc_insertion_point(destructor:es_proto.IELoadWeight)
  SharedDtor();
}

void IELoadWeight::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IELoadWeight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IELoadWeight::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IELoadWeight& IELoadWeight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IELoadWeight.base);
  return *internal_default_instance();
}


void IELoadWeight::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IELoadWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_locs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IELoadWeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IELoadWeight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.IELoadWeight.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.MemLoc data_locs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_locs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IELoadWeight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IELoadWeight)
  return false;
#undef DO_
}

void IELoadWeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IELoadWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.IELoadWeight.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .es_proto.MemLoc data_locs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_locs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->data_locs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IELoadWeight)
}

::google::protobuf::uint8* IELoadWeight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IELoadWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.IELoadWeight.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .es_proto.MemLoc data_locs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_locs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data_locs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IELoadWeight)
  return target;
}

size_t IELoadWeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IELoadWeight)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .es_proto.MemLoc data_locs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_locs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_locs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IELoadWeight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IELoadWeight)
  GOOGLE_DCHECK_NE(&from, this);
  const IELoadWeight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IELoadWeight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IELoadWeight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IELoadWeight)
    MergeFrom(*source);
  }
}

void IELoadWeight::MergeFrom(const IELoadWeight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IELoadWeight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_locs_.MergeFrom(from.data_locs_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void IELoadWeight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IELoadWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IELoadWeight::CopyFrom(const IELoadWeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IELoadWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IELoadWeight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data_locs())) return false;
  return true;
}

void IELoadWeight::Swap(IELoadWeight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IELoadWeight::InternalSwap(IELoadWeight* other) {
  using std::swap;
  CastToBase(&data_locs_)->InternalSwap(CastToBase(&other->data_locs_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IELoadWeight::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IELoadDataMatrix::InitAsDefaultInstance() {
  ::es_proto::_IELoadDataMatrix_default_instance_._instance.get_mutable()->mem_ = const_cast< ::es_proto::Mem*>(
      ::es_proto::Mem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IELoadDataMatrix::kBatchSizeFieldNumber;
const int IELoadDataMatrix::kSeqLenFieldNumber;
const int IELoadDataMatrix::kDEmbedFieldNumber;
const int IELoadDataMatrix::kMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IELoadDataMatrix::IELoadDataMatrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IELoadDataMatrix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IELoadDataMatrix)
}
IELoadDataMatrix::IELoadDataMatrix(const IELoadDataMatrix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mem()) {
    mem_ = new ::es_proto::Mem(*from.mem_);
  } else {
    mem_ = NULL;
  }
  ::memcpy(&batch_size_, &from.batch_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&d_embed_) -
    reinterpret_cast<char*>(&batch_size_)) + sizeof(d_embed_));
  // @@protoc_insertion_point(copy_constructor:es_proto.IELoadDataMatrix)
}

void IELoadDataMatrix::SharedCtor() {
  ::memset(&mem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d_embed_) -
      reinterpret_cast<char*>(&mem_)) + sizeof(d_embed_));
}

IELoadDataMatrix::~IELoadDataMatrix() {
  // @@protoc_insertion_point(destructor:es_proto.IELoadDataMatrix)
  SharedDtor();
}

void IELoadDataMatrix::SharedDtor() {
  if (this != internal_default_instance()) delete mem_;
}

void IELoadDataMatrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IELoadDataMatrix::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IELoadDataMatrix& IELoadDataMatrix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IELoadDataMatrix.base);
  return *internal_default_instance();
}


void IELoadDataMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IELoadDataMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mem_ != NULL);
    mem_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&batch_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&d_embed_) -
        reinterpret_cast<char*>(&batch_size_)) + sizeof(d_embed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IELoadDataMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IELoadDataMatrix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 batch_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_batch_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 seq_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 d_embed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_d_embed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &d_embed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Mem mem = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IELoadDataMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IELoadDataMatrix)
  return false;
#undef DO_
}

void IELoadDataMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IELoadDataMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 batch_size = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->batch_size(), output);
  }

  // required uint64 seq_len = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seq_len(), output);
  }

  // required uint64 d_embed = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->d_embed(), output);
  }

  // required .es_proto.Mem mem = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mem(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IELoadDataMatrix)
}

::google::protobuf::uint8* IELoadDataMatrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IELoadDataMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 batch_size = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->batch_size(), target);
  }

  // required uint64 seq_len = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seq_len(), target);
  }

  // required uint64 d_embed = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->d_embed(), target);
  }

  // required .es_proto.Mem mem = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mem(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IELoadDataMatrix)
  return target;
}

size_t IELoadDataMatrix::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IELoadDataMatrix)
  size_t total_size = 0;

  if (has_mem()) {
    // required .es_proto.Mem mem = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);
  }

  if (has_batch_size()) {
    // required uint64 batch_size = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch_size());
  }

  if (has_seq_len()) {
    // required uint64 seq_len = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());
  }

  if (has_d_embed()) {
    // required uint64 d_embed = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_embed());
  }

  return total_size;
}
size_t IELoadDataMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IELoadDataMatrix)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .es_proto.Mem mem = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);

    // required uint64 batch_size = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch_size());

    // required uint64 seq_len = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());

    // required uint64 d_embed = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d_embed());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IELoadDataMatrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IELoadDataMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  const IELoadDataMatrix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IELoadDataMatrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IELoadDataMatrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IELoadDataMatrix)
    MergeFrom(*source);
  }
}

void IELoadDataMatrix::MergeFrom(const IELoadDataMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IELoadDataMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mem()->::es_proto::Mem::MergeFrom(from.mem());
    }
    if (cached_has_bits & 0x00000002u) {
      batch_size_ = from.batch_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      seq_len_ = from.seq_len_;
    }
    if (cached_has_bits & 0x00000008u) {
      d_embed_ = from.d_embed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IELoadDataMatrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IELoadDataMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IELoadDataMatrix::CopyFrom(const IELoadDataMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IELoadDataMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IELoadDataMatrix::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_mem()) {
    if (!this->mem_->IsInitialized()) return false;
  }
  return true;
}

void IELoadDataMatrix::Swap(IELoadDataMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IELoadDataMatrix::InternalSwap(IELoadDataMatrix* other) {
  using std::swap;
  swap(mem_, other->mem_);
  swap(batch_size_, other->batch_size_);
  swap(seq_len_, other->seq_len_);
  swap(d_embed_, other->d_embed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IELoadDataMatrix::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IELoadMask::InitAsDefaultInstance() {
  ::es_proto::_IELoadMask_default_instance_._instance.get_mutable()->mem_ = const_cast< ::es_proto::Mem*>(
      ::es_proto::Mem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IELoadMask::kSeqLenFieldNumber;
const int IELoadMask::kMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IELoadMask::IELoadMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IELoadMask.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IELoadMask)
}
IELoadMask::IELoadMask(const IELoadMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mem()) {
    mem_ = new ::es_proto::Mem(*from.mem_);
  } else {
    mem_ = NULL;
  }
  seq_len_ = from.seq_len_;
  // @@protoc_insertion_point(copy_constructor:es_proto.IELoadMask)
}

void IELoadMask::SharedCtor() {
  ::memset(&mem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_len_) -
      reinterpret_cast<char*>(&mem_)) + sizeof(seq_len_));
}

IELoadMask::~IELoadMask() {
  // @@protoc_insertion_point(destructor:es_proto.IELoadMask)
  SharedDtor();
}

void IELoadMask::SharedDtor() {
  if (this != internal_default_instance()) delete mem_;
}

void IELoadMask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IELoadMask::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IELoadMask& IELoadMask::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IELoadMask.base);
  return *internal_default_instance();
}


void IELoadMask::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IELoadMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mem_ != NULL);
    mem_->Clear();
  }
  seq_len_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IELoadMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IELoadMask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq_len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seq_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Mem mem = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IELoadMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IELoadMask)
  return false;
#undef DO_
}

void IELoadMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IELoadMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seq_len = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq_len(), output);
  }

  // required .es_proto.Mem mem = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mem(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IELoadMask)
}

::google::protobuf::uint8* IELoadMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IELoadMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seq_len = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq_len(), target);
  }

  // required .es_proto.Mem mem = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mem(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IELoadMask)
  return target;
}

size_t IELoadMask::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IELoadMask)
  size_t total_size = 0;

  if (has_mem()) {
    // required .es_proto.Mem mem = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);
  }

  if (has_seq_len()) {
    // required uint64 seq_len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());
  }

  return total_size;
}
size_t IELoadMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IELoadMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .es_proto.Mem mem = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);

    // required uint64 seq_len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_len());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IELoadMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IELoadMask)
  GOOGLE_DCHECK_NE(&from, this);
  const IELoadMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IELoadMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IELoadMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IELoadMask)
    MergeFrom(*source);
  }
}

void IELoadMask::MergeFrom(const IELoadMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IELoadMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mem()->::es_proto::Mem::MergeFrom(from.mem());
    }
    if (cached_has_bits & 0x00000002u) {
      seq_len_ = from.seq_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IELoadMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IELoadMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IELoadMask::CopyFrom(const IELoadMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IELoadMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IELoadMask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_mem()) {
    if (!this->mem_->IsInitialized()) return false;
  }
  return true;
}

void IELoadMask::Swap(IELoadMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IELoadMask::InternalSwap(IELoadMask* other) {
  using std::swap;
  swap(mem_, other->mem_);
  swap(seq_len_, other->seq_len_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IELoadMask::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IELoadFreqsCis::InitAsDefaultInstance() {
  ::es_proto::_IELoadFreqsCis_default_instance_._instance.get_mutable()->mem_ = const_cast< ::es_proto::Mem*>(
      ::es_proto::Mem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IELoadFreqsCis::kDimFieldNumber;
const int IELoadFreqsCis::kHeadsFieldNumber;
const int IELoadFreqsCis::kMaxSeqLenFieldNumber;
const int IELoadFreqsCis::kMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IELoadFreqsCis::IELoadFreqsCis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IELoadFreqsCis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IELoadFreqsCis)
}
IELoadFreqsCis::IELoadFreqsCis(const IELoadFreqsCis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mem()) {
    mem_ = new ::es_proto::Mem(*from.mem_);
  } else {
    mem_ = NULL;
  }
  ::memcpy(&dim_, &from.dim_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_seq_len_) -
    reinterpret_cast<char*>(&dim_)) + sizeof(max_seq_len_));
  // @@protoc_insertion_point(copy_constructor:es_proto.IELoadFreqsCis)
}

void IELoadFreqsCis::SharedCtor() {
  ::memset(&mem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_seq_len_) -
      reinterpret_cast<char*>(&mem_)) + sizeof(max_seq_len_));
}

IELoadFreqsCis::~IELoadFreqsCis() {
  // @@protoc_insertion_point(destructor:es_proto.IELoadFreqsCis)
  SharedDtor();
}

void IELoadFreqsCis::SharedDtor() {
  if (this != internal_default_instance()) delete mem_;
}

void IELoadFreqsCis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IELoadFreqsCis::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IELoadFreqsCis& IELoadFreqsCis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IELoadFreqsCis.base);
  return *internal_default_instance();
}


void IELoadFreqsCis::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IELoadFreqsCis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mem_ != NULL);
    mem_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&dim_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_seq_len_) -
        reinterpret_cast<char*>(&dim_)) + sizeof(max_seq_len_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IELoadFreqsCis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IELoadFreqsCis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 dim = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dim();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 heads = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_heads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &heads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 max_seq_len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_seq_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_seq_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Mem mem = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IELoadFreqsCis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IELoadFreqsCis)
  return false;
#undef DO_
}

void IELoadFreqsCis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IELoadFreqsCis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 dim = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dim(), output);
  }

  // required uint64 heads = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->heads(), output);
  }

  // required uint64 max_seq_len = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->max_seq_len(), output);
  }

  // required .es_proto.Mem mem = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mem(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IELoadFreqsCis)
}

::google::protobuf::uint8* IELoadFreqsCis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IELoadFreqsCis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 dim = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dim(), target);
  }

  // required uint64 heads = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->heads(), target);
  }

  // required uint64 max_seq_len = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->max_seq_len(), target);
  }

  // required .es_proto.Mem mem = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mem(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IELoadFreqsCis)
  return target;
}

size_t IELoadFreqsCis::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IELoadFreqsCis)
  size_t total_size = 0;

  if (has_mem()) {
    // required .es_proto.Mem mem = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);
  }

  if (has_dim()) {
    // required uint64 dim = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dim());
  }

  if (has_heads()) {
    // required uint64 heads = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->heads());
  }

  if (has_max_seq_len()) {
    // required uint64 max_seq_len = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_seq_len());
  }

  return total_size;
}
size_t IELoadFreqsCis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IELoadFreqsCis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .es_proto.Mem mem = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mem_);

    // required uint64 dim = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dim());

    // required uint64 heads = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->heads());

    // required uint64 max_seq_len = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_seq_len());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IELoadFreqsCis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IELoadFreqsCis)
  GOOGLE_DCHECK_NE(&from, this);
  const IELoadFreqsCis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IELoadFreqsCis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IELoadFreqsCis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IELoadFreqsCis)
    MergeFrom(*source);
  }
}

void IELoadFreqsCis::MergeFrom(const IELoadFreqsCis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IELoadFreqsCis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mem()->::es_proto::Mem::MergeFrom(from.mem());
    }
    if (cached_has_bits & 0x00000002u) {
      dim_ = from.dim_;
    }
    if (cached_has_bits & 0x00000004u) {
      heads_ = from.heads_;
    }
    if (cached_has_bits & 0x00000008u) {
      max_seq_len_ = from.max_seq_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IELoadFreqsCis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IELoadFreqsCis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IELoadFreqsCis::CopyFrom(const IELoadFreqsCis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IELoadFreqsCis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IELoadFreqsCis::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_mem()) {
    if (!this->mem_->IsInitialized()) return false;
  }
  return true;
}

void IELoadFreqsCis::Swap(IELoadFreqsCis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IELoadFreqsCis::InternalSwap(IELoadFreqsCis* other) {
  using std::swap;
  swap(mem_, other->mem_);
  swap(dim_, other->dim_);
  swap(heads_, other->heads_);
  swap(max_seq_len_, other->max_seq_len_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IELoadFreqsCis::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IEExecute::InitAsDefaultInstance() {
  ::es_proto::_IEExecute_default_instance_._instance.get_mutable()->memgraph_ = const_cast< ::es_proto::MemGraph*>(
      ::es_proto::MemGraph::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IEExecute::kMsgFieldNumber;
const int IEExecute::kMemgraphFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IEExecute::IEExecute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IEExecute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IEExecute)
}
IEExecute::IEExecute(const IEExecute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_memgraph()) {
    memgraph_ = new ::es_proto::MemGraph(*from.memgraph_);
  } else {
    memgraph_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.IEExecute)
}

void IEExecute::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memgraph_ = NULL;
}

IEExecute::~IEExecute() {
  // @@protoc_insertion_point(destructor:es_proto.IEExecute)
  SharedDtor();
}

void IEExecute::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete memgraph_;
}

void IEExecute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IEExecute::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IEExecute& IEExecute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IEExecute.base);
  return *internal_default_instance();
}


void IEExecute::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IEExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(memgraph_ != NULL);
      memgraph_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IEExecute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IEExecute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "es_proto.IEExecute.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.MemGraph memgraph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memgraph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IEExecute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IEExecute)
  return false;
#undef DO_
}

void IEExecute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IEExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.IEExecute.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // required .es_proto.MemGraph memgraph = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_memgraph(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IEExecute)
}

::google::protobuf::uint8* IEExecute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IEExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "es_proto.IEExecute.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // required .es_proto.MemGraph memgraph = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_memgraph(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IEExecute)
  return target;
}

size_t IEExecute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IEExecute)
  size_t total_size = 0;

  if (has_msg()) {
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_memgraph()) {
    // required .es_proto.MemGraph memgraph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *memgraph_);
  }

  return total_size;
}
size_t IEExecute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IEExecute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required .es_proto.MemGraph memgraph = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *memgraph_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IEExecute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IEExecute)
  GOOGLE_DCHECK_NE(&from, this);
  const IEExecute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IEExecute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IEExecute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IEExecute)
    MergeFrom(*source);
  }
}

void IEExecute::MergeFrom(const IEExecute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IEExecute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_memgraph()->::es_proto::MemGraph::MergeFrom(from.memgraph());
    }
  }
}

void IEExecute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IEExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IEExecute::CopyFrom(const IEExecute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IEExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IEExecute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_memgraph()) {
    if (!this->memgraph_->IsInitialized()) return false;
  }
  return true;
}

void IEExecute::Swap(IEExecute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IEExecute::InternalSwap(IEExecute* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(memgraph_, other->memgraph_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IEExecute::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IEBuildNext::InitAsDefaultInstance() {
  ::es_proto::_IEBuildNext_default_instance_._instance.get_mutable()->src_part_ = const_cast< ::es_proto::Partition*>(
      ::es_proto::Partition::internal_default_instance());
  ::es_proto::_IEBuildNext_default_instance_._instance.get_mutable()->dst_part_ = const_cast< ::es_proto::Partition*>(
      ::es_proto::Partition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IEBuildNext::kSrcPartFieldNumber;
const int IEBuildNext::kSrcDataLocsFieldNumber;
const int IEBuildNext::kDstPartFieldNumber;
const int IEBuildNext::kDstDataLocsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IEBuildNext::IEBuildNext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IEBuildNext.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IEBuildNext)
}
IEBuildNext::IEBuildNext(const IEBuildNext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      src_data_locs_(from.src_data_locs_),
      dst_data_locs_(from.dst_data_locs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src_part()) {
    src_part_ = new ::es_proto::Partition(*from.src_part_);
  } else {
    src_part_ = NULL;
  }
  if (from.has_dst_part()) {
    dst_part_ = new ::es_proto::Partition(*from.dst_part_);
  } else {
    dst_part_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.IEBuildNext)
}

void IEBuildNext::SharedCtor() {
  ::memset(&src_part_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_part_) -
      reinterpret_cast<char*>(&src_part_)) + sizeof(dst_part_));
}

IEBuildNext::~IEBuildNext() {
  // @@protoc_insertion_point(destructor:es_proto.IEBuildNext)
  SharedDtor();
}

void IEBuildNext::SharedDtor() {
  if (this != internal_default_instance()) delete src_part_;
  if (this != internal_default_instance()) delete dst_part_;
}

void IEBuildNext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IEBuildNext::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IEBuildNext& IEBuildNext::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IEBuildNext.base);
  return *internal_default_instance();
}


void IEBuildNext::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IEBuildNext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_data_locs_.Clear();
  dst_data_locs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(src_part_ != NULL);
      src_part_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dst_part_ != NULL);
      dst_part_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IEBuildNext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IEBuildNext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .es_proto.Partition src_part = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_part()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.MemLoc src_data_locs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_src_data_locs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .es_proto.Partition dst_part = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dst_part()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .es_proto.MemLoc dst_data_locs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dst_data_locs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IEBuildNext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IEBuildNext)
  return false;
#undef DO_
}

void IEBuildNext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IEBuildNext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .es_proto.Partition src_part = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_src_part(), output);
  }

  // repeated .es_proto.MemLoc src_data_locs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->src_data_locs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->src_data_locs(static_cast<int>(i)),
      output);
  }

  // required .es_proto.Partition dst_part = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_dst_part(), output);
  }

  // repeated .es_proto.MemLoc dst_data_locs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dst_data_locs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->dst_data_locs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IEBuildNext)
}

::google::protobuf::uint8* IEBuildNext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IEBuildNext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .es_proto.Partition src_part = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_src_part(), deterministic, target);
  }

  // repeated .es_proto.MemLoc src_data_locs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->src_data_locs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->src_data_locs(static_cast<int>(i)), deterministic, target);
  }

  // required .es_proto.Partition dst_part = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_dst_part(), deterministic, target);
  }

  // repeated .es_proto.MemLoc dst_data_locs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dst_data_locs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->dst_data_locs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IEBuildNext)
  return target;
}

size_t IEBuildNext::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:es_proto.IEBuildNext)
  size_t total_size = 0;

  if (has_src_part()) {
    // required .es_proto.Partition src_part = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_part_);
  }

  if (has_dst_part()) {
    // required .es_proto.Partition dst_part = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dst_part_);
  }

  return total_size;
}
size_t IEBuildNext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IEBuildNext)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .es_proto.Partition src_part = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_part_);

    // required .es_proto.Partition dst_part = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dst_part_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .es_proto.MemLoc src_data_locs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->src_data_locs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->src_data_locs(static_cast<int>(i)));
    }
  }

  // repeated .es_proto.MemLoc dst_data_locs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->dst_data_locs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dst_data_locs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IEBuildNext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IEBuildNext)
  GOOGLE_DCHECK_NE(&from, this);
  const IEBuildNext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IEBuildNext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IEBuildNext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IEBuildNext)
    MergeFrom(*source);
  }
}

void IEBuildNext::MergeFrom(const IEBuildNext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IEBuildNext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  src_data_locs_.MergeFrom(from.src_data_locs_);
  dst_data_locs_.MergeFrom(from.dst_data_locs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_src_part()->::es_proto::Partition::MergeFrom(from.src_part());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dst_part()->::es_proto::Partition::MergeFrom(from.dst_part());
    }
  }
}

void IEBuildNext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IEBuildNext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IEBuildNext::CopyFrom(const IEBuildNext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IEBuildNext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IEBuildNext::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->src_data_locs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dst_data_locs())) return false;
  return true;
}

void IEBuildNext::Swap(IEBuildNext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IEBuildNext::InternalSwap(IEBuildNext* other) {
  using std::swap;
  CastToBase(&src_data_locs_)->InternalSwap(CastToBase(&other->src_data_locs_));
  CastToBase(&dst_data_locs_)->InternalSwap(CastToBase(&other->dst_data_locs_));
  swap(src_part_, other->src_part_);
  swap(dst_part_, other->dst_part_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IEBuildNext::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IERandom::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IERandom::kMemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IERandom::IERandom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_IERandom.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.IERandom)
}
IERandom::IERandom(const IERandom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mems_(from.mems_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.IERandom)
}

void IERandom::SharedCtor() {
}

IERandom::~IERandom() {
  // @@protoc_insertion_point(destructor:es_proto.IERandom)
  SharedDtor();
}

void IERandom::SharedDtor() {
}

void IERandom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IERandom::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IERandom& IERandom::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_IERandom.base);
  return *internal_default_instance();
}


void IERandom::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.IERandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mems_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IERandom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.IERandom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.MemLoc mems = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.IERandom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.IERandom)
  return false;
#undef DO_
}

void IERandom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.IERandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.MemLoc mems = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mems_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mems(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.IERandom)
}

::google::protobuf::uint8* IERandom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.IERandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.MemLoc mems = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mems_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mems(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.IERandom)
  return target;
}

size_t IERandom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.IERandom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.MemLoc mems = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mems_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mems(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IERandom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.IERandom)
  GOOGLE_DCHECK_NE(&from, this);
  const IERandom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IERandom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.IERandom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.IERandom)
    MergeFrom(*source);
  }
}

void IERandom::MergeFrom(const IERandom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.IERandom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mems_.MergeFrom(from.mems_);
}

void IERandom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.IERandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IERandom::CopyFrom(const IERandom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.IERandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IERandom::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->mems())) return false;
  return true;
}

void IERandom::Swap(IERandom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IERandom::InternalSwap(IERandom* other) {
  using std::swap;
  CastToBase(&mems_)->InternalSwap(CastToBase(&other->mems_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IERandom::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceEvent::InitAsDefaultInstance() {
  ::es_proto::_InferenceEvent_default_instance_.init_ = const_cast< ::es_proto::IEInit*>(
      ::es_proto::IEInit::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.close_readers_ = const_cast< ::es_proto::IECloseReaders*>(
      ::es_proto::IECloseReaders::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.load_weight_ = const_cast< ::es_proto::IELoadWeight*>(
      ::es_proto::IELoadWeight::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.load_data_matrix_ = const_cast< ::es_proto::IELoadDataMatrix*>(
      ::es_proto::IELoadDataMatrix::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.load_mask_ = const_cast< ::es_proto::IELoadMask*>(
      ::es_proto::IELoadMask::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.load_freqs_cis_ = const_cast< ::es_proto::IELoadFreqsCis*>(
      ::es_proto::IELoadFreqsCis::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.execute_ = const_cast< ::es_proto::IEExecute*>(
      ::es_proto::IEExecute::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.build_next_ = const_cast< ::es_proto::IEBuildNext*>(
      ::es_proto::IEBuildNext::internal_default_instance());
  ::es_proto::_InferenceEvent_default_instance_.random_ = const_cast< ::es_proto::IERandom*>(
      ::es_proto::IERandom::internal_default_instance());
}
void InferenceEvent::set_allocated_init(::es_proto::IEInit* init) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (init) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      init = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    op_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.init)
}
void InferenceEvent::set_allocated_close_readers(::es_proto::IECloseReaders* close_readers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (close_readers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      close_readers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, close_readers, submessage_arena);
    }
    set_has_close_readers();
    op_.close_readers_ = close_readers;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.close_readers)
}
void InferenceEvent::set_allocated_load_weight(::es_proto::IELoadWeight* load_weight) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (load_weight) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load_weight = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load_weight, submessage_arena);
    }
    set_has_load_weight();
    op_.load_weight_ = load_weight;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.load_weight)
}
void InferenceEvent::set_allocated_load_data_matrix(::es_proto::IELoadDataMatrix* load_data_matrix) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (load_data_matrix) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load_data_matrix = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load_data_matrix, submessage_arena);
    }
    set_has_load_data_matrix();
    op_.load_data_matrix_ = load_data_matrix;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.load_data_matrix)
}
void InferenceEvent::set_allocated_load_mask(::es_proto::IELoadMask* load_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (load_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load_mask, submessage_arena);
    }
    set_has_load_mask();
    op_.load_mask_ = load_mask;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.load_mask)
}
void InferenceEvent::set_allocated_load_freqs_cis(::es_proto::IELoadFreqsCis* load_freqs_cis) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (load_freqs_cis) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      load_freqs_cis = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, load_freqs_cis, submessage_arena);
    }
    set_has_load_freqs_cis();
    op_.load_freqs_cis_ = load_freqs_cis;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.load_freqs_cis)
}
void InferenceEvent::set_allocated_execute(::es_proto::IEExecute* execute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (execute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      execute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execute, submessage_arena);
    }
    set_has_execute();
    op_.execute_ = execute;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.execute)
}
void InferenceEvent::set_allocated_build_next(::es_proto::IEBuildNext* build_next) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (build_next) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build_next = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build_next, submessage_arena);
    }
    set_has_build_next();
    op_.build_next_ = build_next;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.build_next)
}
void InferenceEvent::set_allocated_random(::es_proto::IERandom* random) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_op();
  if (random) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      random = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, random, submessage_arena);
    }
    set_has_random();
    op_.random_ = random;
  }
  // @@protoc_insertion_point(field_set_allocated:es_proto.InferenceEvent.random)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceEvent::kInitFieldNumber;
const int InferenceEvent::kCloseReadersFieldNumber;
const int InferenceEvent::kLoadWeightFieldNumber;
const int InferenceEvent::kLoadDataMatrixFieldNumber;
const int InferenceEvent::kLoadMaskFieldNumber;
const int InferenceEvent::kLoadFreqsCisFieldNumber;
const int InferenceEvent::kExecuteFieldNumber;
const int InferenceEvent::kBuildNextFieldNumber;
const int InferenceEvent::kRandomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceEvent::InferenceEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_InferenceEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.InferenceEvent)
}
InferenceEvent::InferenceEvent(const InferenceEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_op();
  switch (from.op_case()) {
    case kInit: {
      mutable_init()->::es_proto::IEInit::MergeFrom(from.init());
      break;
    }
    case kCloseReaders: {
      mutable_close_readers()->::es_proto::IECloseReaders::MergeFrom(from.close_readers());
      break;
    }
    case kLoadWeight: {
      mutable_load_weight()->::es_proto::IELoadWeight::MergeFrom(from.load_weight());
      break;
    }
    case kLoadDataMatrix: {
      mutable_load_data_matrix()->::es_proto::IELoadDataMatrix::MergeFrom(from.load_data_matrix());
      break;
    }
    case kLoadMask: {
      mutable_load_mask()->::es_proto::IELoadMask::MergeFrom(from.load_mask());
      break;
    }
    case kLoadFreqsCis: {
      mutable_load_freqs_cis()->::es_proto::IELoadFreqsCis::MergeFrom(from.load_freqs_cis());
      break;
    }
    case kExecute: {
      mutable_execute()->::es_proto::IEExecute::MergeFrom(from.execute());
      break;
    }
    case kBuildNext: {
      mutable_build_next()->::es_proto::IEBuildNext::MergeFrom(from.build_next());
      break;
    }
    case kRandom: {
      mutable_random()->::es_proto::IERandom::MergeFrom(from.random());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:es_proto.InferenceEvent)
}

void InferenceEvent::SharedCtor() {
  clear_has_op();
}

InferenceEvent::~InferenceEvent() {
  // @@protoc_insertion_point(destructor:es_proto.InferenceEvent)
  SharedDtor();
}

void InferenceEvent::SharedDtor() {
  if (has_op()) {
    clear_op();
  }
}

void InferenceEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceEvent::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceEvent& InferenceEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_InferenceEvent.base);
  return *internal_default_instance();
}


void InferenceEvent::clear_op() {
// @@protoc_insertion_point(one_of_clear_start:es_proto.InferenceEvent)
  switch (op_case()) {
    case kInit: {
      delete op_.init_;
      break;
    }
    case kCloseReaders: {
      delete op_.close_readers_;
      break;
    }
    case kLoadWeight: {
      delete op_.load_weight_;
      break;
    }
    case kLoadDataMatrix: {
      delete op_.load_data_matrix_;
      break;
    }
    case kLoadMask: {
      delete op_.load_mask_;
      break;
    }
    case kLoadFreqsCis: {
      delete op_.load_freqs_cis_;
      break;
    }
    case kExecute: {
      delete op_.execute_;
      break;
    }
    case kBuildNext: {
      delete op_.build_next_;
      break;
    }
    case kRandom: {
      delete op_.random_;
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OP_NOT_SET;
}


void InferenceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.InferenceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_op();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.InferenceEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .es_proto.IEInit init = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IECloseReaders close_readers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_close_readers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IELoadWeight load_weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IELoadDataMatrix load_data_matrix = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load_data_matrix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IELoadMask load_mask = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IELoadFreqsCis load_freqs_cis = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_load_freqs_cis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IEExecute execute = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IEBuildNext build_next = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .es_proto.IERandom random = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_random()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.InferenceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.InferenceEvent)
  return false;
#undef DO_
}

void InferenceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.InferenceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (op_case()) {
    case kInit:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_init(), output);
      break;
    case kCloseReaders:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_close_readers(), output);
      break;
    case kLoadWeight:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_load_weight(), output);
      break;
    case kLoadDataMatrix:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_load_data_matrix(), output);
      break;
    case kLoadMask:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_load_mask(), output);
      break;
    case kLoadFreqsCis:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_load_freqs_cis(), output);
      break;
    case kExecute:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_execute(), output);
      break;
    case kBuildNext:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_build_next(), output);
      break;
    case kRandom:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_random(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.InferenceEvent)
}

::google::protobuf::uint8* InferenceEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.InferenceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (op_case()) {
    case kInit:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_init(), deterministic, target);
      break;
    case kCloseReaders:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_close_readers(), deterministic, target);
      break;
    case kLoadWeight:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_load_weight(), deterministic, target);
      break;
    case kLoadDataMatrix:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_load_data_matrix(), deterministic, target);
      break;
    case kLoadMask:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_load_mask(), deterministic, target);
      break;
    case kLoadFreqsCis:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_load_freqs_cis(), deterministic, target);
      break;
    case kExecute:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_execute(), deterministic, target);
      break;
    case kBuildNext:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_build_next(), deterministic, target);
      break;
    case kRandom:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          9, this->_internal_random(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.InferenceEvent)
  return target;
}

size_t InferenceEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.InferenceEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (op_case()) {
    // optional .es_proto.IEInit init = 1;
    case kInit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.init_);
      break;
    }
    // optional .es_proto.IECloseReaders close_readers = 2;
    case kCloseReaders: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.close_readers_);
      break;
    }
    // optional .es_proto.IELoadWeight load_weight = 3;
    case kLoadWeight: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.load_weight_);
      break;
    }
    // optional .es_proto.IELoadDataMatrix load_data_matrix = 4;
    case kLoadDataMatrix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.load_data_matrix_);
      break;
    }
    // optional .es_proto.IELoadMask load_mask = 5;
    case kLoadMask: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.load_mask_);
      break;
    }
    // optional .es_proto.IELoadFreqsCis load_freqs_cis = 6;
    case kLoadFreqsCis: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.load_freqs_cis_);
      break;
    }
    // optional .es_proto.IEExecute execute = 7;
    case kExecute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.execute_);
      break;
    }
    // optional .es_proto.IEBuildNext build_next = 8;
    case kBuildNext: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.build_next_);
      break;
    }
    // optional .es_proto.IERandom random = 9;
    case kRandom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *op_.random_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.InferenceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.InferenceEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.InferenceEvent)
    MergeFrom(*source);
  }
}

void InferenceEvent::MergeFrom(const InferenceEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.InferenceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.op_case()) {
    case kInit: {
      mutable_init()->::es_proto::IEInit::MergeFrom(from.init());
      break;
    }
    case kCloseReaders: {
      mutable_close_readers()->::es_proto::IECloseReaders::MergeFrom(from.close_readers());
      break;
    }
    case kLoadWeight: {
      mutable_load_weight()->::es_proto::IELoadWeight::MergeFrom(from.load_weight());
      break;
    }
    case kLoadDataMatrix: {
      mutable_load_data_matrix()->::es_proto::IELoadDataMatrix::MergeFrom(from.load_data_matrix());
      break;
    }
    case kLoadMask: {
      mutable_load_mask()->::es_proto::IELoadMask::MergeFrom(from.load_mask());
      break;
    }
    case kLoadFreqsCis: {
      mutable_load_freqs_cis()->::es_proto::IELoadFreqsCis::MergeFrom(from.load_freqs_cis());
      break;
    }
    case kExecute: {
      mutable_execute()->::es_proto::IEExecute::MergeFrom(from.execute());
      break;
    }
    case kBuildNext: {
      mutable_build_next()->::es_proto::IEBuildNext::MergeFrom(from.build_next());
      break;
    }
    case kRandom: {
      mutable_random()->::es_proto::IERandom::MergeFrom(from.random());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
}

void InferenceEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.InferenceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceEvent::CopyFrom(const InferenceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.InferenceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceEvent::IsInitialized() const {
  switch (op_case()) {
    case kInit: {
      if (has_init()) {
        if (!this->init().IsInitialized()) return false;
      }
      break;
    }
    case kCloseReaders: {
      if (has_close_readers()) {
        if (!this->close_readers().IsInitialized()) return false;
      }
      break;
    }
    case kLoadWeight: {
      if (has_load_weight()) {
        if (!this->load_weight().IsInitialized()) return false;
      }
      break;
    }
    case kLoadDataMatrix: {
      if (has_load_data_matrix()) {
        if (!this->load_data_matrix().IsInitialized()) return false;
      }
      break;
    }
    case kLoadMask: {
      if (has_load_mask()) {
        if (!this->load_mask().IsInitialized()) return false;
      }
      break;
    }
    case kLoadFreqsCis: {
      if (has_load_freqs_cis()) {
        if (!this->load_freqs_cis().IsInitialized()) return false;
      }
      break;
    }
    case kExecute: {
      if (has_execute()) {
        if (!this->execute().IsInitialized()) return false;
      }
      break;
    }
    case kBuildNext: {
      if (has_build_next()) {
        if (!this->build_next().IsInitialized()) return false;
      }
      break;
    }
    case kRandom: {
      if (has_random()) {
        if (!this->random().IsInitialized()) return false;
      }
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  return true;
}

void InferenceEvent::Swap(InferenceEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceEvent::InternalSwap(InferenceEvent* other) {
  using std::swap;
  swap(op_, other->op_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceEvent::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceEvents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceEvents::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceEvents::InferenceEvents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_einsummable_2eproto::scc_info_InferenceEvents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:es_proto.InferenceEvents)
}
InferenceEvents::InferenceEvents(const InferenceEvents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      event_(from.event_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:es_proto.InferenceEvents)
}

void InferenceEvents::SharedCtor() {
}

InferenceEvents::~InferenceEvents() {
  // @@protoc_insertion_point(destructor:es_proto.InferenceEvents)
  SharedDtor();
}

void InferenceEvents::SharedDtor() {
}

void InferenceEvents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceEvents::descriptor() {
  ::protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceEvents& InferenceEvents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_einsummable_2eproto::scc_info_InferenceEvents.base);
  return *internal_default_instance();
}


void InferenceEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:es_proto.InferenceEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:es_proto.InferenceEvents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .es_proto.InferenceEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:es_proto.InferenceEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:es_proto.InferenceEvents)
  return false;
#undef DO_
}

void InferenceEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:es_proto.InferenceEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.InferenceEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->event(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:es_proto.InferenceEvents)
}

::google::protobuf::uint8* InferenceEvents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:es_proto.InferenceEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .es_proto.InferenceEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->event(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:es_proto.InferenceEvents)
  return target;
}

size_t InferenceEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:es_proto.InferenceEvents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .es_proto.InferenceEvent event = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:es_proto.InferenceEvents)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceEvents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceEvents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:es_proto.InferenceEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:es_proto.InferenceEvents)
    MergeFrom(*source);
  }
}

void InferenceEvents::MergeFrom(const InferenceEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:es_proto.InferenceEvents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_.MergeFrom(from.event_);
}

void InferenceEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:es_proto.InferenceEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceEvents::CopyFrom(const InferenceEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:es_proto.InferenceEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceEvents::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->event())) return false;
  return true;
}

void InferenceEvents::Swap(InferenceEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceEvents::InternalSwap(InferenceEvents* other) {
  using std::swap;
  CastToBase(&event_)->InternalSwap(CastToBase(&other->event_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceEvents::GetMetadata() const {
  protobuf_einsummable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_einsummable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace es_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::EsInn* Arena::CreateMaybeMessage< ::es_proto::EsInn >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::EsInn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Einsummable* Arena::CreateMaybeMessage< ::es_proto::Einsummable >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Einsummable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::EinsummableList* Arena::CreateMaybeMessage< ::es_proto::EinsummableList >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::EinsummableList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TouchDim* Arena::CreateMaybeMessage< ::es_proto::TouchDim >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TouchDim >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Touch* Arena::CreateMaybeMessage< ::es_proto::Touch >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Touch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Constant* Arena::CreateMaybeMessage< ::es_proto::Constant >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Constant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Lowertri* Arena::CreateMaybeMessage< ::es_proto::Lowertri >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Lowertri >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Fill* Arena::CreateMaybeMessage< ::es_proto::Fill >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Fill >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGInput* Arena::CreateMaybeMessage< ::es_proto::TGInput >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGInput >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGApply* Arena::CreateMaybeMessage< ::es_proto::TGApply >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGApply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGMove* Arena::CreateMaybeMessage< ::es_proto::TGMove >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGConstant* Arena::CreateMaybeMessage< ::es_proto::TGConstant >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGConstant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::InnRegionDim* Arena::CreateMaybeMessage< ::es_proto::InnRegionDim >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::InnRegionDim >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::OutRegionDim* Arena::CreateMaybeMessage< ::es_proto::OutRegionDim >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::OutRegionDim >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGPartialInn* Arena::CreateMaybeMessage< ::es_proto::TGPartialInn >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGPartialInn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGPartialUnit* Arena::CreateMaybeMessage< ::es_proto::TGPartialUnit >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGPartialUnit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TGPartialize* Arena::CreateMaybeMessage< ::es_proto::TGPartialize >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TGPartialize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TaskGraphNode* Arena::CreateMaybeMessage< ::es_proto::TaskGraphNode >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TaskGraphNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::TaskGraph* Arena::CreateMaybeMessage< ::es_proto::TaskGraph >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::TaskGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Partdim* Arena::CreateMaybeMessage< ::es_proto::Partdim >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Partdim >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Partition* Arena::CreateMaybeMessage< ::es_proto::Partition >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Partition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Placement* Arena::CreateMaybeMessage< ::es_proto::Placement >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Placement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Relation* Arena::CreateMaybeMessage< ::es_proto::Relation >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Relation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::RemapRelations* Arena::CreateMaybeMessage< ::es_proto::RemapRelations >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::RemapRelations >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGInputMem* Arena::CreateMaybeMessage< ::es_proto::MGInputMem >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGInputMem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGInputSto* Arena::CreateMaybeMessage< ::es_proto::MGInputSto >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGInputSto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGConstant* Arena::CreateMaybeMessage< ::es_proto::MGConstant >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGConstant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGApply* Arena::CreateMaybeMessage< ::es_proto::MGApply >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGApply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGMove* Arena::CreateMaybeMessage< ::es_proto::MGMove >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGEvict* Arena::CreateMaybeMessage< ::es_proto::MGEvict >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGEvict >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGLoad* Arena::CreateMaybeMessage< ::es_proto::MGLoad >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGPartialize* Arena::CreateMaybeMessage< ::es_proto::MGPartialize >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGPartialize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGAlloc* Arena::CreateMaybeMessage< ::es_proto::MGAlloc >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGAlloc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MGDel* Arena::CreateMaybeMessage< ::es_proto::MGDel >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MGDel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MemGraphNode* Arena::CreateMaybeMessage< ::es_proto::MemGraphNode >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MemGraphNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MemGraph* Arena::CreateMaybeMessage< ::es_proto::MemGraph >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MemGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::Mem* Arena::CreateMaybeMessage< ::es_proto::Mem >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::Mem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::MemLoc* Arena::CreateMaybeMessage< ::es_proto::MemLoc >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::MemLoc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IEInit* Arena::CreateMaybeMessage< ::es_proto::IEInit >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IEInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IECloseReaders* Arena::CreateMaybeMessage< ::es_proto::IECloseReaders >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IECloseReaders >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IELoadWeight* Arena::CreateMaybeMessage< ::es_proto::IELoadWeight >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IELoadWeight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IELoadDataMatrix* Arena::CreateMaybeMessage< ::es_proto::IELoadDataMatrix >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IELoadDataMatrix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IELoadMask* Arena::CreateMaybeMessage< ::es_proto::IELoadMask >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IELoadMask >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IELoadFreqsCis* Arena::CreateMaybeMessage< ::es_proto::IELoadFreqsCis >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IELoadFreqsCis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IEExecute* Arena::CreateMaybeMessage< ::es_proto::IEExecute >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IEExecute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IEBuildNext* Arena::CreateMaybeMessage< ::es_proto::IEBuildNext >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IEBuildNext >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::IERandom* Arena::CreateMaybeMessage< ::es_proto::IERandom >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::IERandom >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::InferenceEvent* Arena::CreateMaybeMessage< ::es_proto::InferenceEvent >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::InferenceEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::es_proto::InferenceEvents* Arena::CreateMaybeMessage< ::es_proto::InferenceEvents >(Arena* arena) {
  return Arena::CreateInternal< ::es_proto::InferenceEvents >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
